// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msg.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Net {

  /// <summary>Holder for reflection information generated from msg.proto</summary>
  public static partial class MsgReflection {

    #region Descriptor
    /// <summary>File descriptor for msg.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgltc2cucHJvdG8SA05ldBoIZGIucHJvdG8iYwoJQ21kVGhyZWFkEigKCGNt",
            "ZF90eXBlGAEgASgOMhYuTmV0LkNtZFRocmVhZC5DbWRUeXBlIiwKB0NtZFR5",
            "cGUSCgoGRW50aXR5EAASCAoEUG9vbBABEgsKB0Nvbm5lY3QQAiJECgZDbWRB",
            "cHASJQoIY21kX3R5cGUYASABKA4yEy5OZXQuQ21kQXBwLkNtZFR5cGUiEwoH",
            "Q21kVHlwZRIICgRJbmZvEAAiQgoKRWZmaWNpZW5jeRITCgt0aHJlYWRfdHlw",
            "ZRgBIAEoBRIRCgl0aHJlYWRfaWQYAiABKAkSDAoEdGltZRgDIAEoASInCgtB",
            "cHBSZWdpc3RlchIMCgR0eXBlGAEgASgFEgoKAmlkGAIgASgFIj8KC0FwcElu",
            "Zm9TeW5jEg4KBmFwcF9pZBgBIAEoBRIQCghhcHBfdHlwZRgCIAEoBRIOCgZv",
            "bmxpbmUYAyABKAUiMQoPQXBwSW5mb0xpc3RTeW5jEh4KBGFwcHMYASADKAsy",
            "EC5OZXQuQXBwSW5mb1N5bmMiOQoRTmV0d29ya0Rpc2Nvbm5lY3QSFAoMbmV0",
            "d29ya190eXBlGAEgASgFEg4KBnNvY2tldBgCIAEoBSIyCghUYWdWYWx1ZRIT",
            "Cgt2YWx1ZV9pbnQ2NBgBIAEoBBIRCgl2YWx1ZV9zdHIYAiABKAkiRwoDVGFn",
            "Eh4KCHRhZ190eXBlGAEgASgOMgwuTmV0LlRhZ1R5cGUSIAoJdGFnX3ZhbHVl",
            "GAIgASgLMg0uTmV0LlRhZ1ZhbHVlIlcKDk5ldHdvcmtDb25uZWN0EhQKDG5l",
            "dHdvcmtfdHlwZRgBIAEoBRIVCgN0YWcYAiABKAsyCC5OZXQuVGFnEgoKAmlw",
            "GAMgASgJEgwKBHBvcnQYBCABKAUiKQoESHR0cBIMCgRib2R5GAEgASgJEhMK",
            "C3N0YXR1c19jb2RlGAIgASgFIrYBChRDcmVhdGVDb21wb25lbnRQYXJhbRIx",
            "CgR0eXBlGAEgASgOMiMuTmV0LkNyZWF0ZUNvbXBvbmVudFBhcmFtLlBhcmFt",
            "VHlwZRIRCglpbnRfcGFyYW0YAiABKAUSFAoMc3RyaW5nX3BhcmFtGAMgASgJ",
            "EhQKDHVpbnQ2NF9wYXJhbRgEIAEoBCIsCglQYXJhbVR5cGUSBwoDSW50EAAS",
            "CgoGU3RyaW5nEAESCgoGVUludDY0EAIiiwEKD0NyZWF0ZUNvbXBvbmVudBIT",
            "Cgt0aHJlYWRfdHlwZRgBIAEoBRISCgpjbGFzc19uYW1lGAIgASgJEhgKEGlz",
            "X3RvX2FsbF90aHJlYWQYAyABKAgSKQoGcGFyYW1zGAQgAygLMhkuTmV0LkNy",
            "ZWF0ZUNvbXBvbmVudFBhcmFtEgoKAnNuGAUgASgEIh0KD1JlbW92ZUNvbXBv",
            "bmVudBIKCgJzbhgBIAEoBCI4CgxDcmVhdGVTeXN0ZW0SEwoLdGhyZWFkX3R5",
            "cGUYASABKAUSEwoLc3lzdGVtX25hbWUYAiABKAkiMQoMQWNjb3VudENoZWNr",
            "Eg8KB2FjY291bnQYASABKAkSEAoIcGFzc3dvcmQYAiABKAkiQgoOQWNjb3Vu",
            "dENoZWNrUnMSMAoLcmV0dXJuX2NvZGUYASABKA4yGy5OZXQuQWNjb3VudENo",
            "ZWNrUmV0dXJuQ29kZSIsCgpSb2JvdFN0YXRlEg8KB2FjY291bnQYASABKAkS",
            "DQoFc3RhdGUYAiABKAUiMQoOUm9ib3RTeW5jU3RhdGUSHwoGc3RhdGVzGAEg",
            "AygLMg8uTmV0LlJvYm90U3RhdGUiHgoLUm9ib3RDcmVhdGUSDwoHYWNjb3Vu",
            "dBgBIAEoCSKeAQoMUGxheWVyTGl0dGxlEgoKAnNuGAEgASgEEgwKBG5hbWUY",
            "AiABKAkSGwoGZ2VuZGVyGAMgASgOMgsuTmV0LkdlbmRlchINCgVsZXZlbBgE",
            "IAEoBRIiCgpsYXN0X3dvcmxkGAUgASgLMg4uTmV0Lkxhc3RXb3JsZBIkCgxs",
            "YXN0X2R1bmdlb24YBiABKAsyDi5OZXQuTGFzdFdvcmxkIkAKClBsYXllckxp",
            "c3QSDwoHYWNjb3VudBgBIAEoCRIhCgZwbGF5ZXIYAiADKAsyES5OZXQuUGxh",
            "eWVyTGl0dGxlIiIKD1F1ZXJ5UGxheWVyTGlzdBIPCgdhY2NvdW50GAEgASgJ",
            "IiAKC1F1ZXJ5UGxheWVyEhEKCXBsYXllcl9zbhgBIAEoBCI9Cg1RdWVyeVBs",
            "YXllclJzEg8KB2FjY291bnQYASABKAkSGwoGcGxheWVyGAIgASgLMgsuTmV0",
            "LlBsYXllciI5CgxDcmVhdGVQbGF5ZXISDAoEbmFtZRgBIAEoCRIbCgZnZW5k",
            "ZXIYAiABKA4yCy5OZXQuR2VuZGVyIkIKDkNyZWF0ZVBsYXllclJzEjAKC3Jl",
            "dHVybl9jb2RlGAIgASgOMhsuTmV0LkNyZWF0ZVBsYXllclJldHVybkNvZGUi",
            "QAoQQ3JlYXRlUGxheWVyVG9EQhIPCgdhY2NvdW50GAIgASgJEhsKBnBsYXll",
            "chgDIAEoCzILLk5ldC5QbGF5ZXIiVwoSQ3JlYXRlUGxheWVyVG9EQlJzEg8K",
            "B2FjY291bnQYASABKAkSMAoLcmV0dXJuX2NvZGUYAiABKA4yGy5OZXQuQ3Jl",
            "YXRlUGxheWVyUmV0dXJuQ29kZSIhCgxTZWxlY3RQbGF5ZXISEQoJcGxheWVy",
            "X3NuGAEgASgEIosBCg5TZWxlY3RQbGF5ZXJScxI/CgtyZXR1cm5fY29kZRgB",
            "IAEoDjIqLk5ldC5TZWxlY3RQbGF5ZXJScy5TZWxlY3RQbGF5ZXJSZXR1cm5D",
            "b2RlIjgKFlNlbGVjdFBsYXllclJldHVybkNvZGUSCwoHU1BSQ19PSxAAEhEK",
            "DVNQUkNfTm90Rm91bmQQASI8CgpTYXZlUGxheWVyEhEKCXBsYXllcl9zbhgB",
            "IAEoBBIbCgZwbGF5ZXIYAiABKAsyCy5OZXQuUGxheWVyIkcKEVdvcmxkU3lu",
            "Y1RvR2F0aGVyEhAKCHdvcmxkX3NuGAEgASgEEhAKCHdvcmxkX2lkGAIgASgF",
            "Eg4KBm9ubGluZRgDIAEoBSJfChZXb3JsZFByb3h5U3luY1RvR2F0aGVyEhAK",
            "CHdvcmxkX3NuGAEgASgEEhEKCWlzX3JlbW92ZRgCIAEoCBIQCgh3b3JsZF9p",
            "ZBgDIAEoBRIOCgZvbmxpbmUYBCABKAUimwEKCUdhbWVUb2tlbhIuCgtyZXR1",
            "cm5fY29kZRgBIAEoDjIZLk5ldC5HYW1lVG9rZW4uUmV0dXJuQ29kZRINCgV0",
            "b2tlbhgCIAEoCRIKCgJpcBgDIAEoCRIMCgRwb3J0GAQgASgFIjUKClJldHVy",
            "bkNvZGUSEAoMR2FtZVRva2VuX09LEAASFQoRR2FtZVRva2VuX05PX0dBTUUQ",
            "ASIuCgxMb2dpbkJ5VG9rZW4SDwoHYWNjb3VudBgBIAEoCRINCgV0b2tlbhgC",
            "IAEoCSKkAQoOTG9naW5CeVRva2VuUnMSMwoLcmV0dXJuX2NvZGUYASABKA4y",
            "Hi5OZXQuTG9naW5CeVRva2VuUnMuUmV0dXJuQ29kZSJdCgpSZXR1cm5Db2Rl",
            "EgsKB0xHUkNfT0sQABIQCgxMR1JDX1VOS09OV04QARIaChZMR1JDX05PVF9G",
            "T1VORF9BQ0NPVU5UEAISFAoQTEdSQ19UT0tFTl9XUk9ORxADIjcKEUxvZ2lu",
            "VG9rZW5Ub1JlZGlzEg8KB2FjY291bnQYASABKAkSEQoJcGxheWVyX3NuGAIg",
            "ASgEIjUKE0xvZ2luVG9rZW5Ub1JlZGlzUnMSDwoHYWNjb3VudBgBIAEoCRIN",
            "CgV0b2tlbhgCIAEoCSIsChlBY2NvdW50UXVlcnlPbmxpbmVUb1JlZGlzEg8K",
            "B2FjY291bnQYASABKAkioQEKG0FjY291bnRRdWVyeU9ubGluZVRvUmVkaXNS",
            "cxIPCgdhY2NvdW50GAEgASgJEkAKC3JldHVybl9jb2RlGAIgASgOMisuTmV0",
            "LkFjY291bnRRdWVyeU9ubGluZVRvUmVkaXNScy5SZXR1cm5Db2RlIi8KClJl",
            "dHVybkNvZGUSEAoMU09UUl9PZmZsaW5lEAASDwoLU09UUl9PbmxpbmUQASIr",
            "ChhBY2NvdW50U3luY09ubGluZVRvUmVkaXMSDwoHYWNjb3VudBgBIAEoCSIt",
            "ChpBY2NvdW50RGVsZXRlT25saW5lVG9SZWRpcxIPCgdhY2NvdW50GAEgASgJ",
            "IjsKF1BsYXllclN5bmNPbmxpbmVUb1JlZGlzEg8KB2FjY291bnQYASABKAkS",
            "DwoHdmVyc2lvbhgCIAEoBSI9ChlQbGF5ZXJEZWxldGVPbmxpbmVUb1JlZGlz",
            "Eg8KB2FjY291bnQYASABKAkSDwoHdmVyc2lvbhgCIAEoBSIjChBHYW1lVG9r",
            "ZW5Ub1JlZGlzEg8KB2FjY291bnQYASABKAkiLQoJVG9rZW5JbmZvEg0KBXRv",
            "a2VuGAEgASgJEhEKCXBsYXllcl9zbhgCIAEoBCJJChJHYW1lVG9rZW5Ub1Jl",
            "ZGlzUnMSDwoHYWNjb3VudBgBIAEoCRIiCgp0b2tlbl9pbmZvGAIgASgLMg4u",
            "TmV0LlRva2VuSW5mbyJKCgpTeW5jUGxheWVyEg4KBmFwcF9pZBgBIAEoBRIP",
            "CgdhY2NvdW50GAIgASgJEhsKBnBsYXllchgDIAEoCzILLk5ldC5QbGF5ZXIi",
            "PwoKRW50ZXJXb3JsZBIQCgh3b3JsZF9pZBgBIAEoBRIfCghwb3NpdGlvbhgC",
            "IAEoCzINLk5ldC5WZWN0b3IzRCIgCgxSZXF1ZXN0V29ybGQSEAoId29ybGRf",
            "aWQYASABKAUiSwoLQ3JlYXRlV29ybGQSEAoId29ybGRfaWQYASABKAUSFQoN",
            "bGFzdF93b3JsZF9zbhgCIAEoBBITCgtnYW1lX2FwcF9pZBgDIAEoBSJRChRC",
            "cm9hZGNhc3RDcmVhdGVXb3JsZBIQCgh3b3JsZF9pZBgBIAEoBRIQCgh3b3Js",
            "ZF9zbhgCIAEoBBIVCg1sYXN0X3dvcmxkX3NuGAMgASgEIj8KGUJyb2FkY2Fz",
            "dENyZWF0ZVdvcmxkUHJveHkSEAoId29ybGRfaWQYASABKAUSEAoId29ybGRf",
            "c24YAiABKAQiNQoKUXVlcnlXb3JsZBIQCgh3b3JsZF9zbhgBIAEoBBIVCg1s",
            "YXN0X3dvcmxkX3NuGAIgASgEIosBCgxRdWVyeVdvcmxkUnMSEAoId29ybGRf",
            "c24YASABKAQSMQoLcmV0dXJuX2NvZGUYAiABKA4yHC5OZXQuUXVlcnlXb3Js",
            "ZFJzLlJldHVybkNvZGUiNgoKUmV0dXJuQ29kZRIRCg1RdWVyeVdvcmxkX09L",
            "EAASFQoRUXVlcnlXb3JsZF9GYWlsZWQQASJiCghUZWxlcG9ydBIVCg1sYXN0",
            "X3dvcmxkX3NuGAEgASgEEhEKCXBsYXllcl9zbhgCIAEoBBIPCgdhY2NvdW50",
            "GAMgASgJEhsKBnBsYXllchgEIAEoCzILLk5ldC5QbGF5ZXIiIgoNVGVsZXBv",
            "cnRBZnRlchIRCglwbGF5ZXJfc24YASABKAQiIQoMUmVtb3ZlUGxheWVyEhEK",
            "CXBsYXllcl9zbhgBIAEoBCImChFSZXF1ZXN0U3luY1BsYXllchIRCglwbGF5",
            "ZXJfc24YASABKAQiXgoEUm9sZRIMCgRuYW1lGAEgASgJEgoKAnNuGAIgASgE",
            "EhsKBmdlbmRlchgDIAEoDjILLk5ldC5HZW5kZXISHwoIcG9zaXRpb24YBCAB",
            "KAsyDS5OZXQuVmVjdG9yM0QiJQoKUm9sZUFwcGVhchIXCgRyb2xlGAEgAygL",
            "MgkuTmV0LlJvbGUiGwoNUm9sZURpc0FwcGVhchIKCgJzbhgBIAEoBCI6CgRN",
            "b3ZlEhEKCXBsYXllcl9zbhgBIAEoBBIfCghwb3NpdGlvbhgDIAMoCzINLk5l",
            "dC5WZWN0b3IzRCIvCgVFbmVteRIKCgJpZBgBIAEoBRIaCgNwb3MYAiABKAsy",
            "DS5OZXQuVmVjdG9yM0QiUAoMRnNtU3luY1N0YXRlEg0KBXN0YXRlGAEgASgF",
            "EgwKBGNvZGUYAiABKAUSEAoIZW5lbXlfaWQYBSABKAUSEQoJcGxheWVyX3Nu",
            "GAYgASgEIpEBCg9QbGF5ZXJTeW5jU3RhdGUSDQoFc3RhdGUYASABKAUSDAoE",
            "Y29kZRgCIAEoBRIdCgZjdXJQb3MYAyABKAsyDS5OZXQuVmVjdG9yM0QSHQoG",
            "aGl0UG9zGAQgASgLMg0uTmV0LlZlY3RvcjNEEhEKCXBsYXllcl9zbhgFIAEo",
            "BBIQCghlbmVteV9pZBgGIAEoBSI3ChBSZXF1ZXN0U3luY0VuZW15EhEKCXBs",
            "YXllcl9zbhgBIAEoBBIQCghlbmVteV9pZBgCIAEoBSI3ChFSZXF1ZXN0TGlu",
            "a1BsYXllchIQCghlbmVteV9pZBgBIAEoBRIQCghpc0xpbmtlchgCIAEoCCp4",
            "CgdUYWdUeXBlEg8KC1RhZ1R5cGVOb25lEAASEgoOVGFnVHlwZUFjY291bnQQ",
            "ARIOCgpUYWdUeXBlQXBwEAISEQoNVGFnVHlwZUVudGl0eRADEhIKDlRhZ1R5",
            "cGVUb1dvcmxkEAQSEQoNVGFnVHlwZVBsYXllchAFKpoBChZBY2NvdW50Q2hl",
            "Y2tSZXR1cm5Db2RlEgoKBkFSQ19PSxAAEg8KC0FSQ19VTktPTldOEAESGQoV",
            "QVJDX05PVF9GT1VORF9BQ0NPVU5UEAISFgoSQVJDX1BBU1NXT1JEX1dST05H",
            "EAMSDwoLQVJDX0xPR0dJTkcQBBIPCgtBUkNfVElNRU9VVBAFEg4KCkFSQ19P",
            "TkxJTkUQBipHChNMb2dpbkh0dHBSZXR1cm5Db2RlEgsKB0xIUkNfT0sQABIQ",
            "CgxMSFJDX1RJTUVPVVQQARIRCg1MSFJDX05PVEZPVU5EEAIqTAoWQ3JlYXRl",
            "UGxheWVyUmV0dXJuQ29kZRIRCg1DUFJfQ3JlYXRlX09LEAASDwoLQ1BSX1Vu",
            "a29ud24QARIOCgpDUFJfUmVuYW1lEAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Net.DbReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Net.TagType), typeof(global::Net.AccountCheckReturnCode), typeof(global::Net.LoginHttpReturnCode), typeof(global::Net.CreatePlayerReturnCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.CmdThread), global::Net.CmdThread.Parser, new[]{ "CmdType" }, null, new[]{ typeof(global::Net.CmdThread.Types.CmdType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.CmdApp), global::Net.CmdApp.Parser, new[]{ "CmdType" }, null, new[]{ typeof(global::Net.CmdApp.Types.CmdType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Efficiency), global::Net.Efficiency.Parser, new[]{ "ThreadType", "ThreadId", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.AppRegister), global::Net.AppRegister.Parser, new[]{ "Type", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.AppInfoSync), global::Net.AppInfoSync.Parser, new[]{ "AppId", "AppType", "Online" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.AppInfoListSync), global::Net.AppInfoListSync.Parser, new[]{ "Apps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.NetworkDisconnect), global::Net.NetworkDisconnect.Parser, new[]{ "NetworkType", "Socket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.TagValue), global::Net.TagValue.Parser, new[]{ "ValueInt64", "ValueStr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Tag), global::Net.Tag.Parser, new[]{ "TagType", "TagValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.NetworkConnect), global::Net.NetworkConnect.Parser, new[]{ "NetworkType", "Tag", "Ip", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Http), global::Net.Http.Parser, new[]{ "Body", "StatusCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.CreateComponentParam), global::Net.CreateComponentParam.Parser, new[]{ "Type", "IntParam", "StringParam", "Uint64Param" }, null, new[]{ typeof(global::Net.CreateComponentParam.Types.ParamType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.CreateComponent), global::Net.CreateComponent.Parser, new[]{ "ThreadType", "ClassName", "IsToAllThread", "Params", "Sn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.RemoveComponent), global::Net.RemoveComponent.Parser, new[]{ "Sn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.CreateSystem), global::Net.CreateSystem.Parser, new[]{ "ThreadType", "SystemName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.AccountCheck), global::Net.AccountCheck.Parser, new[]{ "Account", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.AccountCheckRs), global::Net.AccountCheckRs.Parser, new[]{ "ReturnCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.RobotState), global::Net.RobotState.Parser, new[]{ "Account", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.RobotSyncState), global::Net.RobotSyncState.Parser, new[]{ "States" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.RobotCreate), global::Net.RobotCreate.Parser, new[]{ "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.PlayerLittle), global::Net.PlayerLittle.Parser, new[]{ "Sn", "Name", "Gender", "Level", "LastWorld", "LastDungeon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.PlayerList), global::Net.PlayerList.Parser, new[]{ "Account", "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.QueryPlayerList), global::Net.QueryPlayerList.Parser, new[]{ "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.QueryPlayer), global::Net.QueryPlayer.Parser, new[]{ "PlayerSn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.QueryPlayerRs), global::Net.QueryPlayerRs.Parser, new[]{ "Account", "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.CreatePlayer), global::Net.CreatePlayer.Parser, new[]{ "Name", "Gender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.CreatePlayerRs), global::Net.CreatePlayerRs.Parser, new[]{ "ReturnCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.CreatePlayerToDB), global::Net.CreatePlayerToDB.Parser, new[]{ "Account", "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.CreatePlayerToDBRs), global::Net.CreatePlayerToDBRs.Parser, new[]{ "Account", "ReturnCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.SelectPlayer), global::Net.SelectPlayer.Parser, new[]{ "PlayerSn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.SelectPlayerRs), global::Net.SelectPlayerRs.Parser, new[]{ "ReturnCode" }, null, new[]{ typeof(global::Net.SelectPlayerRs.Types.SelectPlayerReturnCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.SavePlayer), global::Net.SavePlayer.Parser, new[]{ "PlayerSn", "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.WorldSyncToGather), global::Net.WorldSyncToGather.Parser, new[]{ "WorldSn", "WorldId", "Online" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.WorldProxySyncToGather), global::Net.WorldProxySyncToGather.Parser, new[]{ "WorldSn", "IsRemove", "WorldId", "Online" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.GameToken), global::Net.GameToken.Parser, new[]{ "ReturnCode", "Token", "Ip", "Port" }, null, new[]{ typeof(global::Net.GameToken.Types.ReturnCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.LoginByToken), global::Net.LoginByToken.Parser, new[]{ "Account", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.LoginByTokenRs), global::Net.LoginByTokenRs.Parser, new[]{ "ReturnCode" }, null, new[]{ typeof(global::Net.LoginByTokenRs.Types.ReturnCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.LoginTokenToRedis), global::Net.LoginTokenToRedis.Parser, new[]{ "Account", "PlayerSn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.LoginTokenToRedisRs), global::Net.LoginTokenToRedisRs.Parser, new[]{ "Account", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.AccountQueryOnlineToRedis), global::Net.AccountQueryOnlineToRedis.Parser, new[]{ "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.AccountQueryOnlineToRedisRs), global::Net.AccountQueryOnlineToRedisRs.Parser, new[]{ "Account", "ReturnCode" }, null, new[]{ typeof(global::Net.AccountQueryOnlineToRedisRs.Types.ReturnCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.AccountSyncOnlineToRedis), global::Net.AccountSyncOnlineToRedis.Parser, new[]{ "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.AccountDeleteOnlineToRedis), global::Net.AccountDeleteOnlineToRedis.Parser, new[]{ "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.PlayerSyncOnlineToRedis), global::Net.PlayerSyncOnlineToRedis.Parser, new[]{ "Account", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.PlayerDeleteOnlineToRedis), global::Net.PlayerDeleteOnlineToRedis.Parser, new[]{ "Account", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.GameTokenToRedis), global::Net.GameTokenToRedis.Parser, new[]{ "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.TokenInfo), global::Net.TokenInfo.Parser, new[]{ "Token", "PlayerSn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.GameTokenToRedisRs), global::Net.GameTokenToRedisRs.Parser, new[]{ "Account", "TokenInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.SyncPlayer), global::Net.SyncPlayer.Parser, new[]{ "AppId", "Account", "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.EnterWorld), global::Net.EnterWorld.Parser, new[]{ "WorldId", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.RequestWorld), global::Net.RequestWorld.Parser, new[]{ "WorldId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.CreateWorld), global::Net.CreateWorld.Parser, new[]{ "WorldId", "LastWorldSn", "GameAppId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.BroadcastCreateWorld), global::Net.BroadcastCreateWorld.Parser, new[]{ "WorldId", "WorldSn", "LastWorldSn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.BroadcastCreateWorldProxy), global::Net.BroadcastCreateWorldProxy.Parser, new[]{ "WorldId", "WorldSn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.QueryWorld), global::Net.QueryWorld.Parser, new[]{ "WorldSn", "LastWorldSn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.QueryWorldRs), global::Net.QueryWorldRs.Parser, new[]{ "WorldSn", "ReturnCode" }, null, new[]{ typeof(global::Net.QueryWorldRs.Types.ReturnCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Teleport), global::Net.Teleport.Parser, new[]{ "LastWorldSn", "PlayerSn", "Account", "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.TeleportAfter), global::Net.TeleportAfter.Parser, new[]{ "PlayerSn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.RemovePlayer), global::Net.RemovePlayer.Parser, new[]{ "PlayerSn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.RequestSyncPlayer), global::Net.RequestSyncPlayer.Parser, new[]{ "PlayerSn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Role), global::Net.Role.Parser, new[]{ "Name", "Sn", "Gender", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.RoleAppear), global::Net.RoleAppear.Parser, new[]{ "Role" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.RoleDisAppear), global::Net.RoleDisAppear.Parser, new[]{ "Sn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Move), global::Net.Move.Parser, new[]{ "PlayerSn", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Enemy), global::Net.Enemy.Parser, new[]{ "Id", "Pos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.FsmSyncState), global::Net.FsmSyncState.Parser, new[]{ "State", "Code", "EnemyId", "PlayerSn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.PlayerSyncState), global::Net.PlayerSyncState.Parser, new[]{ "State", "Code", "CurPos", "HitPos", "PlayerSn", "EnemyId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.RequestSyncEnemy), global::Net.RequestSyncEnemy.Parser, new[]{ "PlayerSn", "EnemyId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.RequestLinkPlayer), global::Net.RequestLinkPlayer.Parser, new[]{ "EnemyId", "IsLinker" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TagType {
    [pbr::OriginalName("TagTypeNone")] None = 0,
    [pbr::OriginalName("TagTypeAccount")] Account = 1,
    [pbr::OriginalName("TagTypeApp")] App = 2,
    [pbr::OriginalName("TagTypeEntity")] Entity = 3,
    /// <summary>
    /// allinone toworld
    /// </summary>
    [pbr::OriginalName("TagTypeToWorld")] ToWorld = 4,
    [pbr::OriginalName("TagTypePlayer")] Player = 5,
  }

  public enum AccountCheckReturnCode {
    [pbr::OriginalName("ARC_OK")] ArcOk = 0,
    [pbr::OriginalName("ARC_UNKONWN")] ArcUnkonwn = 1,
    [pbr::OriginalName("ARC_NOT_FOUND_ACCOUNT")] ArcNotFoundAccount = 2,
    [pbr::OriginalName("ARC_PASSWORD_WRONG")] ArcPasswordWrong = 3,
    /// <summary>
    /// 正在登录
    /// </summary>
    [pbr::OriginalName("ARC_LOGGING")] ArcLogging = 4,
    /// <summary>
    /// 超时
    /// </summary>
    [pbr::OriginalName("ARC_TIMEOUT")] ArcTimeout = 5,
    /// <summary>
    /// 已在线		
    /// </summary>
    [pbr::OriginalName("ARC_ONLINE")] ArcOnline = 6,
  }

  public enum LoginHttpReturnCode {
    [pbr::OriginalName("LHRC_OK")] LhrcOk = 0,
    [pbr::OriginalName("LHRC_TIMEOUT")] LhrcTimeout = 1,
    /// <summary>
    /// 没有Login进程
    /// </summary>
    [pbr::OriginalName("LHRC_NOTFOUND")] LhrcNotfound = 2,
  }

  public enum CreatePlayerReturnCode {
    [pbr::OriginalName("CPR_Create_OK")] CprCreateOk = 0,
    [pbr::OriginalName("CPR_Unkonwn")] CprUnkonwn = 1,
    [pbr::OriginalName("CPR_Rename")] CprRename = 2,
  }

  #endregion

  #region Messages
  public sealed partial class CmdThread : pb::IMessage<CmdThread> {
    private static readonly pb::MessageParser<CmdThread> _parser = new pb::MessageParser<CmdThread>(() => new CmdThread());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CmdThread> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdThread() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdThread(CmdThread other) : this() {
      cmdType_ = other.cmdType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdThread Clone() {
      return new CmdThread(this);
    }

    /// <summary>Field number for the "cmd_type" field.</summary>
    public const int CmdTypeFieldNumber = 1;
    private global::Net.CmdThread.Types.CmdType cmdType_ = global::Net.CmdThread.Types.CmdType.Entity;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.CmdThread.Types.CmdType CmdType {
      get { return cmdType_; }
      set {
        cmdType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CmdThread);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CmdThread other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CmdType != other.CmdType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CmdType != global::Net.CmdThread.Types.CmdType.Entity) hash ^= CmdType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CmdType != global::Net.CmdThread.Types.CmdType.Entity) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CmdType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CmdType != global::Net.CmdThread.Types.CmdType.Entity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CmdType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CmdThread other) {
      if (other == null) {
        return;
      }
      if (other.CmdType != global::Net.CmdThread.Types.CmdType.Entity) {
        CmdType = other.CmdType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CmdType = (global::Net.CmdThread.Types.CmdType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CmdThread message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CmdType {
        [pbr::OriginalName("Entity")] Entity = 0,
        [pbr::OriginalName("Pool")] Pool = 1,
        [pbr::OriginalName("Connect")] Connect = 2,
      }

    }
    #endregion

  }

  public sealed partial class CmdApp : pb::IMessage<CmdApp> {
    private static readonly pb::MessageParser<CmdApp> _parser = new pb::MessageParser<CmdApp>(() => new CmdApp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CmdApp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdApp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdApp(CmdApp other) : this() {
      cmdType_ = other.cmdType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdApp Clone() {
      return new CmdApp(this);
    }

    /// <summary>Field number for the "cmd_type" field.</summary>
    public const int CmdTypeFieldNumber = 1;
    private global::Net.CmdApp.Types.CmdType cmdType_ = global::Net.CmdApp.Types.CmdType.Info;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.CmdApp.Types.CmdType CmdType {
      get { return cmdType_; }
      set {
        cmdType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CmdApp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CmdApp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CmdType != other.CmdType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CmdType != global::Net.CmdApp.Types.CmdType.Info) hash ^= CmdType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CmdType != global::Net.CmdApp.Types.CmdType.Info) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CmdType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CmdType != global::Net.CmdApp.Types.CmdType.Info) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CmdType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CmdApp other) {
      if (other == null) {
        return;
      }
      if (other.CmdType != global::Net.CmdApp.Types.CmdType.Info) {
        CmdType = other.CmdType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CmdType = (global::Net.CmdApp.Types.CmdType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CmdApp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CmdType {
        [pbr::OriginalName("Info")] Info = 0,
      }

    }
    #endregion

  }

  public sealed partial class Efficiency : pb::IMessage<Efficiency> {
    private static readonly pb::MessageParser<Efficiency> _parser = new pb::MessageParser<Efficiency>(() => new Efficiency());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Efficiency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Efficiency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Efficiency(Efficiency other) : this() {
      threadType_ = other.threadType_;
      threadId_ = other.threadId_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Efficiency Clone() {
      return new Efficiency(this);
    }

    /// <summary>Field number for the "thread_type" field.</summary>
    public const int ThreadTypeFieldNumber = 1;
    private int threadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThreadType {
      get { return threadType_; }
      set {
        threadType_ = value;
      }
    }

    /// <summary>Field number for the "thread_id" field.</summary>
    public const int ThreadIdFieldNumber = 2;
    private string threadId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThreadId {
      get { return threadId_; }
      set {
        threadId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private double time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Efficiency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Efficiency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThreadType != other.ThreadType) return false;
      if (ThreadId != other.ThreadId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Time, other.Time)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ThreadType != 0) hash ^= ThreadType.GetHashCode();
      if (ThreadId.Length != 0) hash ^= ThreadId.GetHashCode();
      if (Time != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Time);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ThreadType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ThreadType);
      }
      if (ThreadId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ThreadId);
      }
      if (Time != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ThreadType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThreadType);
      }
      if (ThreadId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThreadId);
      }
      if (Time != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Efficiency other) {
      if (other == null) {
        return;
      }
      if (other.ThreadType != 0) {
        ThreadType = other.ThreadType;
      }
      if (other.ThreadId.Length != 0) {
        ThreadId = other.ThreadId;
      }
      if (other.Time != 0D) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ThreadType = input.ReadInt32();
            break;
          }
          case 18: {
            ThreadId = input.ReadString();
            break;
          }
          case 25: {
            Time = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppRegister : pb::IMessage<AppRegister> {
    private static readonly pb::MessageParser<AppRegister> _parser = new pb::MessageParser<AppRegister>(() => new AppRegister());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppRegister> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppRegister() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppRegister(AppRegister other) : this() {
      type_ = other.type_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppRegister Clone() {
      return new AppRegister(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    /// app_type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppRegister);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppRegister other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppRegister other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppInfoSync : pb::IMessage<AppInfoSync> {
    private static readonly pb::MessageParser<AppInfoSync> _parser = new pb::MessageParser<AppInfoSync>(() => new AppInfoSync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInfoSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoSync(AppInfoSync other) : this() {
      appId_ = other.appId_;
      appType_ = other.appType_;
      online_ = other.online_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoSync Clone() {
      return new AppInfoSync(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private int appId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AppId {
      get { return appId_; }
      set {
        appId_ = value;
      }
    }

    /// <summary>Field number for the "app_type" field.</summary>
    public const int AppTypeFieldNumber = 2;
    private int appType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AppType {
      get { return appType_; }
      set {
        appType_ = value;
      }
    }

    /// <summary>Field number for the "online" field.</summary>
    public const int OnlineFieldNumber = 3;
    private int online_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Online {
      get { return online_; }
      set {
        online_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInfoSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInfoSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (AppType != other.AppType) return false;
      if (Online != other.Online) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId != 0) hash ^= AppId.GetHashCode();
      if (AppType != 0) hash ^= AppType.GetHashCode();
      if (Online != 0) hash ^= Online.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AppId);
      }
      if (AppType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AppType);
      }
      if (Online != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Online);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppId);
      }
      if (AppType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppType);
      }
      if (Online != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Online);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInfoSync other) {
      if (other == null) {
        return;
      }
      if (other.AppId != 0) {
        AppId = other.AppId;
      }
      if (other.AppType != 0) {
        AppType = other.AppType;
      }
      if (other.Online != 0) {
        Online = other.Online;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AppId = input.ReadInt32();
            break;
          }
          case 16: {
            AppType = input.ReadInt32();
            break;
          }
          case 24: {
            Online = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppInfoListSync : pb::IMessage<AppInfoListSync> {
    private static readonly pb::MessageParser<AppInfoListSync> _parser = new pb::MessageParser<AppInfoListSync>(() => new AppInfoListSync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInfoListSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoListSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoListSync(AppInfoListSync other) : this() {
      apps_ = other.apps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfoListSync Clone() {
      return new AppInfoListSync(this);
    }

    /// <summary>Field number for the "apps" field.</summary>
    public const int AppsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Net.AppInfoSync> _repeated_apps_codec
        = pb::FieldCodec.ForMessage(10, global::Net.AppInfoSync.Parser);
    private readonly pbc::RepeatedField<global::Net.AppInfoSync> apps_ = new pbc::RepeatedField<global::Net.AppInfoSync>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.AppInfoSync> Apps {
      get { return apps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInfoListSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInfoListSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!apps_.Equals(other.apps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= apps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      apps_.WriteTo(output, _repeated_apps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += apps_.CalculateSize(_repeated_apps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInfoListSync other) {
      if (other == null) {
        return;
      }
      apps_.Add(other.apps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            apps_.AddEntriesFrom(input, _repeated_apps_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetworkDisconnect : pb::IMessage<NetworkDisconnect> {
    private static readonly pb::MessageParser<NetworkDisconnect> _parser = new pb::MessageParser<NetworkDisconnect>(() => new NetworkDisconnect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkDisconnect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkDisconnect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkDisconnect(NetworkDisconnect other) : this() {
      networkType_ = other.networkType_;
      socket_ = other.socket_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkDisconnect Clone() {
      return new NetworkDisconnect(this);
    }

    /// <summary>Field number for the "network_type" field.</summary>
    public const int NetworkTypeFieldNumber = 1;
    private int networkType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NetworkType {
      get { return networkType_; }
      set {
        networkType_ = value;
      }
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 2;
    private int socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Socket {
      get { return socket_; }
      set {
        socket_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkDisconnect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkDisconnect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkType != other.NetworkType) return false;
      if (Socket != other.Socket) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkType != 0) hash ^= NetworkType.GetHashCode();
      if (Socket != 0) hash ^= Socket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NetworkType);
      }
      if (Socket != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Socket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NetworkType);
      }
      if (Socket != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Socket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkDisconnect other) {
      if (other == null) {
        return;
      }
      if (other.NetworkType != 0) {
        NetworkType = other.NetworkType;
      }
      if (other.Socket != 0) {
        Socket = other.Socket;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NetworkType = input.ReadInt32();
            break;
          }
          case 16: {
            Socket = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TagValue : pb::IMessage<TagValue> {
    private static readonly pb::MessageParser<TagValue> _parser = new pb::MessageParser<TagValue>(() => new TagValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TagValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagValue(TagValue other) : this() {
      valueInt64_ = other.valueInt64_;
      valueStr_ = other.valueStr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagValue Clone() {
      return new TagValue(this);
    }

    /// <summary>Field number for the "value_int64" field.</summary>
    public const int ValueInt64FieldNumber = 1;
    private ulong valueInt64_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ValueInt64 {
      get { return valueInt64_; }
      set {
        valueInt64_ = value;
      }
    }

    /// <summary>Field number for the "value_str" field.</summary>
    public const int ValueStrFieldNumber = 2;
    private string valueStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueStr {
      get { return valueStr_; }
      set {
        valueStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TagValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TagValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValueInt64 != other.ValueInt64) return false;
      if (ValueStr != other.ValueStr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ValueInt64 != 0UL) hash ^= ValueInt64.GetHashCode();
      if (ValueStr.Length != 0) hash ^= ValueStr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ValueInt64 != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ValueInt64);
      }
      if (ValueStr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValueStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ValueInt64 != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ValueInt64);
      }
      if (ValueStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueStr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TagValue other) {
      if (other == null) {
        return;
      }
      if (other.ValueInt64 != 0UL) {
        ValueInt64 = other.ValueInt64;
      }
      if (other.ValueStr.Length != 0) {
        ValueStr = other.ValueStr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ValueInt64 = input.ReadUInt64();
            break;
          }
          case 18: {
            ValueStr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Tag : pb::IMessage<Tag> {
    private static readonly pb::MessageParser<Tag> _parser = new pb::MessageParser<Tag>(() => new Tag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tag(Tag other) : this() {
      tagType_ = other.tagType_;
      tagValue_ = other.tagValue_ != null ? other.tagValue_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tag Clone() {
      return new Tag(this);
    }

    /// <summary>Field number for the "tag_type" field.</summary>
    public const int TagTypeFieldNumber = 1;
    private global::Net.TagType tagType_ = global::Net.TagType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.TagType TagType {
      get { return tagType_; }
      set {
        tagType_ = value;
      }
    }

    /// <summary>Field number for the "tag_value" field.</summary>
    public const int TagValueFieldNumber = 2;
    private global::Net.TagValue tagValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.TagValue TagValue {
      get { return tagValue_; }
      set {
        tagValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TagType != other.TagType) return false;
      if (!object.Equals(TagValue, other.TagValue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TagType != global::Net.TagType.None) hash ^= TagType.GetHashCode();
      if (tagValue_ != null) hash ^= TagValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TagType != global::Net.TagType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TagType);
      }
      if (tagValue_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TagValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TagType != global::Net.TagType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TagType);
      }
      if (tagValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TagValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tag other) {
      if (other == null) {
        return;
      }
      if (other.TagType != global::Net.TagType.None) {
        TagType = other.TagType;
      }
      if (other.tagValue_ != null) {
        if (tagValue_ == null) {
          TagValue = new global::Net.TagValue();
        }
        TagValue.MergeFrom(other.TagValue);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TagType = (global::Net.TagType) input.ReadEnum();
            break;
          }
          case 18: {
            if (tagValue_ == null) {
              TagValue = new global::Net.TagValue();
            }
            input.ReadMessage(TagValue);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetworkConnect : pb::IMessage<NetworkConnect> {
    private static readonly pb::MessageParser<NetworkConnect> _parser = new pb::MessageParser<NetworkConnect>(() => new NetworkConnect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkConnect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkConnect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkConnect(NetworkConnect other) : this() {
      networkType_ = other.networkType_;
      tag_ = other.tag_ != null ? other.tag_.Clone() : null;
      ip_ = other.ip_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkConnect Clone() {
      return new NetworkConnect(this);
    }

    /// <summary>Field number for the "network_type" field.</summary>
    public const int NetworkTypeFieldNumber = 1;
    private int networkType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NetworkType {
      get { return networkType_; }
      set {
        networkType_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 2;
    private global::Net.Tag tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Tag Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 3;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkConnect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkConnect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkType != other.NetworkType) return false;
      if (!object.Equals(Tag, other.Tag)) return false;
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkType != 0) hash ^= NetworkType.GetHashCode();
      if (tag_ != null) hash ^= Tag.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NetworkType);
      }
      if (tag_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Tag);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NetworkType);
      }
      if (tag_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tag);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkConnect other) {
      if (other == null) {
        return;
      }
      if (other.NetworkType != 0) {
        NetworkType = other.NetworkType;
      }
      if (other.tag_ != null) {
        if (tag_ == null) {
          Tag = new global::Net.Tag();
        }
        Tag.MergeFrom(other.Tag);
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NetworkType = input.ReadInt32();
            break;
          }
          case 18: {
            if (tag_ == null) {
              Tag = new global::Net.Tag();
            }
            input.ReadMessage(Tag);
            break;
          }
          case 26: {
            Ip = input.ReadString();
            break;
          }
          case 32: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Http : pb::IMessage<Http> {
    private static readonly pb::MessageParser<Http> _parser = new pb::MessageParser<Http>(() => new Http());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Http> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Http() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Http(Http other) : this() {
      body_ = other.body_;
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Http Clone() {
      return new Http(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private string body_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 2;
    private int statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Http);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Http other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Body != other.Body) return false;
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Body);
      }
      if (StatusCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Http other) {
      if (other == null) {
        return;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Body = input.ReadString();
            break;
          }
          case 16: {
            StatusCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateComponentParam : pb::IMessage<CreateComponentParam> {
    private static readonly pb::MessageParser<CreateComponentParam> _parser = new pb::MessageParser<CreateComponentParam>(() => new CreateComponentParam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateComponentParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateComponentParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateComponentParam(CreateComponentParam other) : this() {
      type_ = other.type_;
      intParam_ = other.intParam_;
      stringParam_ = other.stringParam_;
      uint64Param_ = other.uint64Param_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateComponentParam Clone() {
      return new CreateComponentParam(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Net.CreateComponentParam.Types.ParamType type_ = global::Net.CreateComponentParam.Types.ParamType.Int;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.CreateComponentParam.Types.ParamType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "int_param" field.</summary>
    public const int IntParamFieldNumber = 2;
    private int intParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntParam {
      get { return intParam_; }
      set {
        intParam_ = value;
      }
    }

    /// <summary>Field number for the "string_param" field.</summary>
    public const int StringParamFieldNumber = 3;
    private string stringParam_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringParam {
      get { return stringParam_; }
      set {
        stringParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uint64_param" field.</summary>
    public const int Uint64ParamFieldNumber = 4;
    private ulong uint64Param_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Uint64Param {
      get { return uint64Param_; }
      set {
        uint64Param_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateComponentParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateComponentParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (IntParam != other.IntParam) return false;
      if (StringParam != other.StringParam) return false;
      if (Uint64Param != other.Uint64Param) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Net.CreateComponentParam.Types.ParamType.Int) hash ^= Type.GetHashCode();
      if (IntParam != 0) hash ^= IntParam.GetHashCode();
      if (StringParam.Length != 0) hash ^= StringParam.GetHashCode();
      if (Uint64Param != 0UL) hash ^= Uint64Param.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Net.CreateComponentParam.Types.ParamType.Int) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (IntParam != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IntParam);
      }
      if (StringParam.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StringParam);
      }
      if (Uint64Param != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Uint64Param);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Net.CreateComponentParam.Types.ParamType.Int) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (IntParam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntParam);
      }
      if (StringParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringParam);
      }
      if (Uint64Param != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Uint64Param);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateComponentParam other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Net.CreateComponentParam.Types.ParamType.Int) {
        Type = other.Type;
      }
      if (other.IntParam != 0) {
        IntParam = other.IntParam;
      }
      if (other.StringParam.Length != 0) {
        StringParam = other.StringParam;
      }
      if (other.Uint64Param != 0UL) {
        Uint64Param = other.Uint64Param;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Net.CreateComponentParam.Types.ParamType) input.ReadEnum();
            break;
          }
          case 16: {
            IntParam = input.ReadInt32();
            break;
          }
          case 26: {
            StringParam = input.ReadString();
            break;
          }
          case 32: {
            Uint64Param = input.ReadUInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateComponentParam message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ParamType {
        [pbr::OriginalName("Int")] Int = 0,
        [pbr::OriginalName("String")] String = 1,
        [pbr::OriginalName("UInt64")] Uint64 = 2,
      }

    }
    #endregion

  }

  public sealed partial class CreateComponent : pb::IMessage<CreateComponent> {
    private static readonly pb::MessageParser<CreateComponent> _parser = new pb::MessageParser<CreateComponent>(() => new CreateComponent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateComponent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateComponent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateComponent(CreateComponent other) : this() {
      threadType_ = other.threadType_;
      className_ = other.className_;
      isToAllThread_ = other.isToAllThread_;
      params_ = other.params_.Clone();
      sn_ = other.sn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateComponent Clone() {
      return new CreateComponent(this);
    }

    /// <summary>Field number for the "thread_type" field.</summary>
    public const int ThreadTypeFieldNumber = 1;
    private int threadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThreadType {
      get { return threadType_; }
      set {
        threadType_ = value;
      }
    }

    /// <summary>Field number for the "class_name" field.</summary>
    public const int ClassNameFieldNumber = 2;
    private string className_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClassName {
      get { return className_; }
      set {
        className_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_to_all_thread" field.</summary>
    public const int IsToAllThreadFieldNumber = 3;
    private bool isToAllThread_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsToAllThread {
      get { return isToAllThread_; }
      set {
        isToAllThread_ = value;
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Net.CreateComponentParam> _repeated_params_codec
        = pb::FieldCodec.ForMessage(34, global::Net.CreateComponentParam.Parser);
    private readonly pbc::RepeatedField<global::Net.CreateComponentParam> params_ = new pbc::RepeatedField<global::Net.CreateComponentParam>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.CreateComponentParam> Params {
      get { return params_; }
    }

    /// <summary>Field number for the "sn" field.</summary>
    public const int SnFieldNumber = 5;
    private ulong sn_;
    /// <summary>
    /// 指定sn
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sn {
      get { return sn_; }
      set {
        sn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateComponent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateComponent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThreadType != other.ThreadType) return false;
      if (ClassName != other.ClassName) return false;
      if (IsToAllThread != other.IsToAllThread) return false;
      if(!params_.Equals(other.params_)) return false;
      if (Sn != other.Sn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ThreadType != 0) hash ^= ThreadType.GetHashCode();
      if (ClassName.Length != 0) hash ^= ClassName.GetHashCode();
      if (IsToAllThread != false) hash ^= IsToAllThread.GetHashCode();
      hash ^= params_.GetHashCode();
      if (Sn != 0UL) hash ^= Sn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ThreadType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ThreadType);
      }
      if (ClassName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClassName);
      }
      if (IsToAllThread != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsToAllThread);
      }
      params_.WriteTo(output, _repeated_params_codec);
      if (Sn != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Sn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ThreadType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThreadType);
      }
      if (ClassName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClassName);
      }
      if (IsToAllThread != false) {
        size += 1 + 1;
      }
      size += params_.CalculateSize(_repeated_params_codec);
      if (Sn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateComponent other) {
      if (other == null) {
        return;
      }
      if (other.ThreadType != 0) {
        ThreadType = other.ThreadType;
      }
      if (other.ClassName.Length != 0) {
        ClassName = other.ClassName;
      }
      if (other.IsToAllThread != false) {
        IsToAllThread = other.IsToAllThread;
      }
      params_.Add(other.params_);
      if (other.Sn != 0UL) {
        Sn = other.Sn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ThreadType = input.ReadInt32();
            break;
          }
          case 18: {
            ClassName = input.ReadString();
            break;
          }
          case 24: {
            IsToAllThread = input.ReadBool();
            break;
          }
          case 34: {
            params_.AddEntriesFrom(input, _repeated_params_codec);
            break;
          }
          case 40: {
            Sn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveComponent : pb::IMessage<RemoveComponent> {
    private static readonly pb::MessageParser<RemoveComponent> _parser = new pb::MessageParser<RemoveComponent>(() => new RemoveComponent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveComponent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveComponent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveComponent(RemoveComponent other) : this() {
      sn_ = other.sn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveComponent Clone() {
      return new RemoveComponent(this);
    }

    /// <summary>Field number for the "sn" field.</summary>
    public const int SnFieldNumber = 1;
    private ulong sn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sn {
      get { return sn_; }
      set {
        sn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveComponent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveComponent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sn != other.Sn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sn != 0UL) hash ^= Sn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveComponent other) {
      if (other == null) {
        return;
      }
      if (other.Sn != 0UL) {
        Sn = other.Sn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateSystem : pb::IMessage<CreateSystem> {
    private static readonly pb::MessageParser<CreateSystem> _parser = new pb::MessageParser<CreateSystem>(() => new CreateSystem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSystem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSystem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSystem(CreateSystem other) : this() {
      threadType_ = other.threadType_;
      systemName_ = other.systemName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSystem Clone() {
      return new CreateSystem(this);
    }

    /// <summary>Field number for the "thread_type" field.</summary>
    public const int ThreadTypeFieldNumber = 1;
    private int threadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThreadType {
      get { return threadType_; }
      set {
        threadType_ = value;
      }
    }

    /// <summary>Field number for the "system_name" field.</summary>
    public const int SystemNameFieldNumber = 2;
    private string systemName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SystemName {
      get { return systemName_; }
      set {
        systemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSystem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSystem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThreadType != other.ThreadType) return false;
      if (SystemName != other.SystemName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ThreadType != 0) hash ^= ThreadType.GetHashCode();
      if (SystemName.Length != 0) hash ^= SystemName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ThreadType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ThreadType);
      }
      if (SystemName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SystemName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ThreadType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThreadType);
      }
      if (SystemName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SystemName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSystem other) {
      if (other == null) {
        return;
      }
      if (other.ThreadType != 0) {
        ThreadType = other.ThreadType;
      }
      if (other.SystemName.Length != 0) {
        SystemName = other.SystemName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ThreadType = input.ReadInt32();
            break;
          }
          case 18: {
            SystemName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountCheck : pb::IMessage<AccountCheck> {
    private static readonly pb::MessageParser<AccountCheck> _parser = new pb::MessageParser<AccountCheck>(() => new AccountCheck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountCheck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCheck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCheck(AccountCheck other) : this() {
      account_ = other.account_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCheck Clone() {
      return new AccountCheck(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountCheck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountCheck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountCheck other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountCheckRs : pb::IMessage<AccountCheckRs> {
    private static readonly pb::MessageParser<AccountCheckRs> _parser = new pb::MessageParser<AccountCheckRs>(() => new AccountCheckRs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountCheckRs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCheckRs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCheckRs(AccountCheckRs other) : this() {
      returnCode_ = other.returnCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCheckRs Clone() {
      return new AccountCheckRs(this);
    }

    /// <summary>Field number for the "return_code" field.</summary>
    public const int ReturnCodeFieldNumber = 1;
    private global::Net.AccountCheckReturnCode returnCode_ = global::Net.AccountCheckReturnCode.ArcOk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.AccountCheckReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountCheckRs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountCheckRs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnCode != other.ReturnCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnCode != global::Net.AccountCheckReturnCode.ArcOk) hash ^= ReturnCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnCode != global::Net.AccountCheckReturnCode.ArcOk) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ReturnCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnCode != global::Net.AccountCheckReturnCode.ArcOk) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountCheckRs other) {
      if (other == null) {
        return;
      }
      if (other.ReturnCode != global::Net.AccountCheckReturnCode.ArcOk) {
        ReturnCode = other.ReturnCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReturnCode = (global::Net.AccountCheckReturnCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RobotState : pb::IMessage<RobotState> {
    private static readonly pb::MessageParser<RobotState> _parser = new pb::MessageParser<RobotState>(() => new RobotState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotState(RobotState other) : this() {
      account_ = other.account_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotState Clone() {
      return new RobotState(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotState other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RobotSyncState : pb::IMessage<RobotSyncState> {
    private static readonly pb::MessageParser<RobotSyncState> _parser = new pb::MessageParser<RobotSyncState>(() => new RobotSyncState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotSyncState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotSyncState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotSyncState(RobotSyncState other) : this() {
      states_ = other.states_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotSyncState Clone() {
      return new RobotSyncState(this);
    }

    /// <summary>Field number for the "states" field.</summary>
    public const int StatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Net.RobotState> _repeated_states_codec
        = pb::FieldCodec.ForMessage(10, global::Net.RobotState.Parser);
    private readonly pbc::RepeatedField<global::Net.RobotState> states_ = new pbc::RepeatedField<global::Net.RobotState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.RobotState> States {
      get { return states_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotSyncState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotSyncState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!states_.Equals(other.states_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= states_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      states_.WriteTo(output, _repeated_states_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += states_.CalculateSize(_repeated_states_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotSyncState other) {
      if (other == null) {
        return;
      }
      states_.Add(other.states_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RobotCreate : pb::IMessage<RobotCreate> {
    private static readonly pb::MessageParser<RobotCreate> _parser = new pb::MessageParser<RobotCreate>(() => new RobotCreate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotCreate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotCreate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotCreate(RobotCreate other) : this() {
      account_ = other.account_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotCreate Clone() {
      return new RobotCreate(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotCreate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotCreate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotCreate other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 玩家精减信息
  /// </summary>
  public sealed partial class PlayerLittle : pb::IMessage<PlayerLittle> {
    private static readonly pb::MessageParser<PlayerLittle> _parser = new pb::MessageParser<PlayerLittle>(() => new PlayerLittle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerLittle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerLittle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerLittle(PlayerLittle other) : this() {
      sn_ = other.sn_;
      name_ = other.name_;
      gender_ = other.gender_;
      level_ = other.level_;
      lastWorld_ = other.lastWorld_ != null ? other.lastWorld_.Clone() : null;
      lastDungeon_ = other.lastDungeon_ != null ? other.lastDungeon_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerLittle Clone() {
      return new PlayerLittle(this);
    }

    /// <summary>Field number for the "sn" field.</summary>
    public const int SnFieldNumber = 1;
    private ulong sn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sn {
      get { return sn_; }
      set {
        sn_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 3;
    private global::Net.Gender gender_ = global::Net.Gender.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Gender Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "last_world" field.</summary>
    public const int LastWorldFieldNumber = 5;
    private global::Net.LastWorld lastWorld_;
    /// <summary>
    /// 用于登录Game
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.LastWorld LastWorld {
      get { return lastWorld_; }
      set {
        lastWorld_ = value;
      }
    }

    /// <summary>Field number for the "last_dungeon" field.</summary>
    public const int LastDungeonFieldNumber = 6;
    private global::Net.LastWorld lastDungeon_;
    /// <summary>
    /// 副本地图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.LastWorld LastDungeon {
      get { return lastDungeon_; }
      set {
        lastDungeon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerLittle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerLittle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sn != other.Sn) return false;
      if (Name != other.Name) return false;
      if (Gender != other.Gender) return false;
      if (Level != other.Level) return false;
      if (!object.Equals(LastWorld, other.LastWorld)) return false;
      if (!object.Equals(LastDungeon, other.LastDungeon)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sn != 0UL) hash ^= Sn.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gender != global::Net.Gender.None) hash ^= Gender.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (lastWorld_ != null) hash ^= LastWorld.GetHashCode();
      if (lastDungeon_ != null) hash ^= LastDungeon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sn);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Gender != global::Net.Gender.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Gender);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      if (lastWorld_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LastWorld);
      }
      if (lastDungeon_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LastDungeon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sn);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gender != global::Net.Gender.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gender);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (lastWorld_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastWorld);
      }
      if (lastDungeon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastDungeon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerLittle other) {
      if (other == null) {
        return;
      }
      if (other.Sn != 0UL) {
        Sn = other.Sn;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gender != global::Net.Gender.None) {
        Gender = other.Gender;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.lastWorld_ != null) {
        if (lastWorld_ == null) {
          LastWorld = new global::Net.LastWorld();
        }
        LastWorld.MergeFrom(other.LastWorld);
      }
      if (other.lastDungeon_ != null) {
        if (lastDungeon_ == null) {
          LastDungeon = new global::Net.LastWorld();
        }
        LastDungeon.MergeFrom(other.LastDungeon);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sn = input.ReadUInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Gender = (global::Net.Gender) input.ReadEnum();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 42: {
            if (lastWorld_ == null) {
              LastWorld = new global::Net.LastWorld();
            }
            input.ReadMessage(LastWorld);
            break;
          }
          case 50: {
            if (lastDungeon_ == null) {
              LastDungeon = new global::Net.LastWorld();
            }
            input.ReadMessage(LastDungeon);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerList : pb::IMessage<PlayerList> {
    private static readonly pb::MessageParser<PlayerList> _parser = new pb::MessageParser<PlayerList>(() => new PlayerList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerList(PlayerList other) : this() {
      account_ = other.account_;
      player_ = other.player_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerList Clone() {
      return new PlayerList(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Net.PlayerLittle> _repeated_player_codec
        = pb::FieldCodec.ForMessage(18, global::Net.PlayerLittle.Parser);
    private readonly pbc::RepeatedField<global::Net.PlayerLittle> player_ = new pbc::RepeatedField<global::Net.PlayerLittle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.PlayerLittle> Player {
      get { return player_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if(!player_.Equals(other.player_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      hash ^= player_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      player_.WriteTo(output, _repeated_player_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      size += player_.CalculateSize(_repeated_player_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerList other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      player_.Add(other.player_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            player_.AddEntriesFrom(input, _repeated_player_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryPlayerList : pb::IMessage<QueryPlayerList> {
    private static readonly pb::MessageParser<QueryPlayerList> _parser = new pb::MessageParser<QueryPlayerList>(() => new QueryPlayerList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryPlayerList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayerList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayerList(QueryPlayerList other) : this() {
      account_ = other.account_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayerList Clone() {
      return new QueryPlayerList(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryPlayerList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryPlayerList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryPlayerList other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryPlayer : pb::IMessage<QueryPlayer> {
    private static readonly pb::MessageParser<QueryPlayer> _parser = new pb::MessageParser<QueryPlayer>(() => new QueryPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayer(QueryPlayer other) : this() {
      playerSn_ = other.playerSn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayer Clone() {
      return new QueryPlayer(this);
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 1;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerSn != other.PlayerSn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlayerSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryPlayer other) {
      if (other == null) {
        return;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerSn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryPlayerRs : pb::IMessage<QueryPlayerRs> {
    private static readonly pb::MessageParser<QueryPlayerRs> _parser = new pb::MessageParser<QueryPlayerRs>(() => new QueryPlayerRs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryPlayerRs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayerRs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayerRs(QueryPlayerRs other) : this() {
      account_ = other.account_;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayerRs Clone() {
      return new QueryPlayerRs(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 2;
    private global::Net.Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryPlayerRs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryPlayerRs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (player_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryPlayerRs other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Net.Player();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            if (player_ == null) {
              Player = new global::Net.Player();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatePlayer : pb::IMessage<CreatePlayer> {
    private static readonly pb::MessageParser<CreatePlayer> _parser = new pb::MessageParser<CreatePlayer>(() => new CreatePlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayer(CreatePlayer other) : this() {
      name_ = other.name_;
      gender_ = other.gender_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayer Clone() {
      return new CreatePlayer(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 2;
    private global::Net.Gender gender_ = global::Net.Gender.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Gender Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Gender != other.Gender) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gender != global::Net.Gender.None) hash ^= Gender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Gender != global::Net.Gender.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Gender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gender != global::Net.Gender.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePlayer other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gender != global::Net.Gender.None) {
        Gender = other.Gender;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Gender = (global::Net.Gender) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatePlayerRs : pb::IMessage<CreatePlayerRs> {
    private static readonly pb::MessageParser<CreatePlayerRs> _parser = new pb::MessageParser<CreatePlayerRs>(() => new CreatePlayerRs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePlayerRs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerRs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerRs(CreatePlayerRs other) : this() {
      returnCode_ = other.returnCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerRs Clone() {
      return new CreatePlayerRs(this);
    }

    /// <summary>Field number for the "return_code" field.</summary>
    public const int ReturnCodeFieldNumber = 2;
    private global::Net.CreatePlayerReturnCode returnCode_ = global::Net.CreatePlayerReturnCode.CprCreateOk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.CreatePlayerReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePlayerRs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePlayerRs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnCode != other.ReturnCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnCode != global::Net.CreatePlayerReturnCode.CprCreateOk) hash ^= ReturnCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnCode != global::Net.CreatePlayerReturnCode.CprCreateOk) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ReturnCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnCode != global::Net.CreatePlayerReturnCode.CprCreateOk) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePlayerRs other) {
      if (other == null) {
        return;
      }
      if (other.ReturnCode != global::Net.CreatePlayerReturnCode.CprCreateOk) {
        ReturnCode = other.ReturnCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            ReturnCode = (global::Net.CreatePlayerReturnCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatePlayerToDB : pb::IMessage<CreatePlayerToDB> {
    private static readonly pb::MessageParser<CreatePlayerToDB> _parser = new pb::MessageParser<CreatePlayerToDB>(() => new CreatePlayerToDB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePlayerToDB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerToDB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerToDB(CreatePlayerToDB other) : this() {
      account_ = other.account_;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerToDB Clone() {
      return new CreatePlayerToDB(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 3;
    private global::Net.Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePlayerToDB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePlayerToDB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Account);
      }
      if (player_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePlayerToDB other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Net.Player();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Account = input.ReadString();
            break;
          }
          case 26: {
            if (player_ == null) {
              Player = new global::Net.Player();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatePlayerToDBRs : pb::IMessage<CreatePlayerToDBRs> {
    private static readonly pb::MessageParser<CreatePlayerToDBRs> _parser = new pb::MessageParser<CreatePlayerToDBRs>(() => new CreatePlayerToDBRs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePlayerToDBRs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerToDBRs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerToDBRs(CreatePlayerToDBRs other) : this() {
      account_ = other.account_;
      returnCode_ = other.returnCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlayerToDBRs Clone() {
      return new CreatePlayerToDBRs(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "return_code" field.</summary>
    public const int ReturnCodeFieldNumber = 2;
    private global::Net.CreatePlayerReturnCode returnCode_ = global::Net.CreatePlayerReturnCode.CprCreateOk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.CreatePlayerReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePlayerToDBRs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePlayerToDBRs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (ReturnCode != other.ReturnCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (ReturnCode != global::Net.CreatePlayerReturnCode.CprCreateOk) hash ^= ReturnCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (ReturnCode != global::Net.CreatePlayerReturnCode.CprCreateOk) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ReturnCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (ReturnCode != global::Net.CreatePlayerReturnCode.CprCreateOk) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePlayerToDBRs other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.ReturnCode != global::Net.CreatePlayerReturnCode.CprCreateOk) {
        ReturnCode = other.ReturnCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            ReturnCode = (global::Net.CreatePlayerReturnCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SelectPlayer : pb::IMessage<SelectPlayer> {
    private static readonly pb::MessageParser<SelectPlayer> _parser = new pb::MessageParser<SelectPlayer>(() => new SelectPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelectPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectPlayer(SelectPlayer other) : this() {
      playerSn_ = other.playerSn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectPlayer Clone() {
      return new SelectPlayer(this);
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 1;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelectPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelectPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerSn != other.PlayerSn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlayerSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelectPlayer other) {
      if (other == null) {
        return;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerSn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SelectPlayerRs : pb::IMessage<SelectPlayerRs> {
    private static readonly pb::MessageParser<SelectPlayerRs> _parser = new pb::MessageParser<SelectPlayerRs>(() => new SelectPlayerRs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelectPlayerRs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectPlayerRs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectPlayerRs(SelectPlayerRs other) : this() {
      returnCode_ = other.returnCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectPlayerRs Clone() {
      return new SelectPlayerRs(this);
    }

    /// <summary>Field number for the "return_code" field.</summary>
    public const int ReturnCodeFieldNumber = 1;
    private global::Net.SelectPlayerRs.Types.SelectPlayerReturnCode returnCode_ = global::Net.SelectPlayerRs.Types.SelectPlayerReturnCode.SprcOk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.SelectPlayerRs.Types.SelectPlayerReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelectPlayerRs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelectPlayerRs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnCode != other.ReturnCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnCode != global::Net.SelectPlayerRs.Types.SelectPlayerReturnCode.SprcOk) hash ^= ReturnCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnCode != global::Net.SelectPlayerRs.Types.SelectPlayerReturnCode.SprcOk) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ReturnCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnCode != global::Net.SelectPlayerRs.Types.SelectPlayerReturnCode.SprcOk) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelectPlayerRs other) {
      if (other == null) {
        return;
      }
      if (other.ReturnCode != global::Net.SelectPlayerRs.Types.SelectPlayerReturnCode.SprcOk) {
        ReturnCode = other.ReturnCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReturnCode = (global::Net.SelectPlayerRs.Types.SelectPlayerReturnCode) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SelectPlayerRs message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SelectPlayerReturnCode {
        [pbr::OriginalName("SPRC_OK")] SprcOk = 0,
        [pbr::OriginalName("SPRC_NotFound")] SprcNotFound = 1,
      }

    }
    #endregion

  }

  public sealed partial class SavePlayer : pb::IMessage<SavePlayer> {
    private static readonly pb::MessageParser<SavePlayer> _parser = new pb::MessageParser<SavePlayer>(() => new SavePlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SavePlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePlayer(SavePlayer other) : this() {
      playerSn_ = other.playerSn_;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePlayer Clone() {
      return new SavePlayer(this);
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 1;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 2;
    private global::Net.Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SavePlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SavePlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerSn != other.PlayerSn) return false;
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlayerSn);
      }
      if (player_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SavePlayer other) {
      if (other == null) {
        return;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Net.Player();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerSn = input.ReadUInt64();
            break;
          }
          case 18: {
            if (player_ == null) {
              Player = new global::Net.Player();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WorldSyncToGather : pb::IMessage<WorldSyncToGather> {
    private static readonly pb::MessageParser<WorldSyncToGather> _parser = new pb::MessageParser<WorldSyncToGather>(() => new WorldSyncToGather());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorldSyncToGather> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldSyncToGather() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldSyncToGather(WorldSyncToGather other) : this() {
      worldSn_ = other.worldSn_;
      worldId_ = other.worldId_;
      online_ = other.online_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldSyncToGather Clone() {
      return new WorldSyncToGather(this);
    }

    /// <summary>Field number for the "world_sn" field.</summary>
    public const int WorldSnFieldNumber = 1;
    private ulong worldSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong WorldSn {
      get { return worldSn_; }
      set {
        worldSn_ = value;
      }
    }

    /// <summary>Field number for the "world_id" field.</summary>
    public const int WorldIdFieldNumber = 2;
    private int worldId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WorldId {
      get { return worldId_; }
      set {
        worldId_ = value;
      }
    }

    /// <summary>Field number for the "online" field.</summary>
    public const int OnlineFieldNumber = 3;
    private int online_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Online {
      get { return online_; }
      set {
        online_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorldSyncToGather);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorldSyncToGather other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldSn != other.WorldSn) return false;
      if (WorldId != other.WorldId) return false;
      if (Online != other.Online) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldSn != 0UL) hash ^= WorldSn.GetHashCode();
      if (WorldId != 0) hash ^= WorldId.GetHashCode();
      if (Online != 0) hash ^= Online.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(WorldSn);
      }
      if (WorldId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WorldId);
      }
      if (Online != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Online);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WorldSn);
      }
      if (WorldId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorldId);
      }
      if (Online != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Online);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorldSyncToGather other) {
      if (other == null) {
        return;
      }
      if (other.WorldSn != 0UL) {
        WorldSn = other.WorldSn;
      }
      if (other.WorldId != 0) {
        WorldId = other.WorldId;
      }
      if (other.Online != 0) {
        Online = other.Online;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorldSn = input.ReadUInt64();
            break;
          }
          case 16: {
            WorldId = input.ReadInt32();
            break;
          }
          case 24: {
            Online = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WorldProxySyncToGather : pb::IMessage<WorldProxySyncToGather> {
    private static readonly pb::MessageParser<WorldProxySyncToGather> _parser = new pb::MessageParser<WorldProxySyncToGather>(() => new WorldProxySyncToGather());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorldProxySyncToGather> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldProxySyncToGather() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldProxySyncToGather(WorldProxySyncToGather other) : this() {
      worldSn_ = other.worldSn_;
      isRemove_ = other.isRemove_;
      worldId_ = other.worldId_;
      online_ = other.online_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldProxySyncToGather Clone() {
      return new WorldProxySyncToGather(this);
    }

    /// <summary>Field number for the "world_sn" field.</summary>
    public const int WorldSnFieldNumber = 1;
    private ulong worldSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong WorldSn {
      get { return worldSn_; }
      set {
        worldSn_ = value;
      }
    }

    /// <summary>Field number for the "is_remove" field.</summary>
    public const int IsRemoveFieldNumber = 2;
    private bool isRemove_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRemove {
      get { return isRemove_; }
      set {
        isRemove_ = value;
      }
    }

    /// <summary>Field number for the "world_id" field.</summary>
    public const int WorldIdFieldNumber = 3;
    private int worldId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WorldId {
      get { return worldId_; }
      set {
        worldId_ = value;
      }
    }

    /// <summary>Field number for the "online" field.</summary>
    public const int OnlineFieldNumber = 4;
    private int online_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Online {
      get { return online_; }
      set {
        online_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorldProxySyncToGather);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorldProxySyncToGather other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldSn != other.WorldSn) return false;
      if (IsRemove != other.IsRemove) return false;
      if (WorldId != other.WorldId) return false;
      if (Online != other.Online) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldSn != 0UL) hash ^= WorldSn.GetHashCode();
      if (IsRemove != false) hash ^= IsRemove.GetHashCode();
      if (WorldId != 0) hash ^= WorldId.GetHashCode();
      if (Online != 0) hash ^= Online.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(WorldSn);
      }
      if (IsRemove != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsRemove);
      }
      if (WorldId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(WorldId);
      }
      if (Online != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Online);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WorldSn);
      }
      if (IsRemove != false) {
        size += 1 + 1;
      }
      if (WorldId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorldId);
      }
      if (Online != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Online);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorldProxySyncToGather other) {
      if (other == null) {
        return;
      }
      if (other.WorldSn != 0UL) {
        WorldSn = other.WorldSn;
      }
      if (other.IsRemove != false) {
        IsRemove = other.IsRemove;
      }
      if (other.WorldId != 0) {
        WorldId = other.WorldId;
      }
      if (other.Online != 0) {
        Online = other.Online;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorldSn = input.ReadUInt64();
            break;
          }
          case 16: {
            IsRemove = input.ReadBool();
            break;
          }
          case 24: {
            WorldId = input.ReadInt32();
            break;
          }
          case 32: {
            Online = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameToken : pb::IMessage<GameToken> {
    private static readonly pb::MessageParser<GameToken> _parser = new pb::MessageParser<GameToken>(() => new GameToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameToken(GameToken other) : this() {
      returnCode_ = other.returnCode_;
      token_ = other.token_;
      ip_ = other.ip_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameToken Clone() {
      return new GameToken(this);
    }

    /// <summary>Field number for the "return_code" field.</summary>
    public const int ReturnCodeFieldNumber = 1;
    private global::Net.GameToken.Types.ReturnCode returnCode_ = global::Net.GameToken.Types.ReturnCode.GameTokenOk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.GameToken.Types.ReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 3;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnCode != other.ReturnCode) return false;
      if (Token != other.Token) return false;
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnCode != global::Net.GameToken.Types.ReturnCode.GameTokenOk) hash ^= ReturnCode.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnCode != global::Net.GameToken.Types.ReturnCode.GameTokenOk) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ReturnCode);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnCode != global::Net.GameToken.Types.ReturnCode.GameTokenOk) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameToken other) {
      if (other == null) {
        return;
      }
      if (other.ReturnCode != global::Net.GameToken.Types.ReturnCode.GameTokenOk) {
        ReturnCode = other.ReturnCode;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReturnCode = (global::Net.GameToken.Types.ReturnCode) input.ReadEnum();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            Ip = input.ReadString();
            break;
          }
          case 32: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GameToken message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ReturnCode {
        [pbr::OriginalName("GameToken_OK")] GameTokenOk = 0,
        [pbr::OriginalName("GameToken_NO_GAME")] GameTokenNoGame = 1,
      }

    }
    #endregion

  }

  public sealed partial class LoginByToken : pb::IMessage<LoginByToken> {
    private static readonly pb::MessageParser<LoginByToken> _parser = new pb::MessageParser<LoginByToken>(() => new LoginByToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginByToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginByToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginByToken(LoginByToken other) : this() {
      account_ = other.account_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginByToken Clone() {
      return new LoginByToken(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginByToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginByToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginByToken other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginByTokenRs : pb::IMessage<LoginByTokenRs> {
    private static readonly pb::MessageParser<LoginByTokenRs> _parser = new pb::MessageParser<LoginByTokenRs>(() => new LoginByTokenRs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginByTokenRs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginByTokenRs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginByTokenRs(LoginByTokenRs other) : this() {
      returnCode_ = other.returnCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginByTokenRs Clone() {
      return new LoginByTokenRs(this);
    }

    /// <summary>Field number for the "return_code" field.</summary>
    public const int ReturnCodeFieldNumber = 1;
    private global::Net.LoginByTokenRs.Types.ReturnCode returnCode_ = global::Net.LoginByTokenRs.Types.ReturnCode.LgrcOk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.LoginByTokenRs.Types.ReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginByTokenRs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginByTokenRs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnCode != other.ReturnCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnCode != global::Net.LoginByTokenRs.Types.ReturnCode.LgrcOk) hash ^= ReturnCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnCode != global::Net.LoginByTokenRs.Types.ReturnCode.LgrcOk) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ReturnCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnCode != global::Net.LoginByTokenRs.Types.ReturnCode.LgrcOk) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginByTokenRs other) {
      if (other == null) {
        return;
      }
      if (other.ReturnCode != global::Net.LoginByTokenRs.Types.ReturnCode.LgrcOk) {
        ReturnCode = other.ReturnCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReturnCode = (global::Net.LoginByTokenRs.Types.ReturnCode) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LoginByTokenRs message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ReturnCode {
        [pbr::OriginalName("LGRC_OK")] LgrcOk = 0,
        [pbr::OriginalName("LGRC_UNKONWN")] LgrcUnkonwn = 1,
        [pbr::OriginalName("LGRC_NOT_FOUND_ACCOUNT")] LgrcNotFoundAccount = 2,
        [pbr::OriginalName("LGRC_TOKEN_WRONG")] LgrcTokenWrong = 3,
      }

    }
    #endregion

  }

  public sealed partial class LoginTokenToRedis : pb::IMessage<LoginTokenToRedis> {
    private static readonly pb::MessageParser<LoginTokenToRedis> _parser = new pb::MessageParser<LoginTokenToRedis>(() => new LoginTokenToRedis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginTokenToRedis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginTokenToRedis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginTokenToRedis(LoginTokenToRedis other) : this() {
      account_ = other.account_;
      playerSn_ = other.playerSn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginTokenToRedis Clone() {
      return new LoginTokenToRedis(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 2;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginTokenToRedis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginTokenToRedis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (PlayerSn != other.PlayerSn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (PlayerSn != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(PlayerSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginTokenToRedis other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            PlayerSn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginTokenToRedisRs : pb::IMessage<LoginTokenToRedisRs> {
    private static readonly pb::MessageParser<LoginTokenToRedisRs> _parser = new pb::MessageParser<LoginTokenToRedisRs>(() => new LoginTokenToRedisRs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginTokenToRedisRs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginTokenToRedisRs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginTokenToRedisRs(LoginTokenToRedisRs other) : this() {
      account_ = other.account_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginTokenToRedisRs Clone() {
      return new LoginTokenToRedisRs(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginTokenToRedisRs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginTokenToRedisRs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginTokenToRedisRs other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountQueryOnlineToRedis : pb::IMessage<AccountQueryOnlineToRedis> {
    private static readonly pb::MessageParser<AccountQueryOnlineToRedis> _parser = new pb::MessageParser<AccountQueryOnlineToRedis>(() => new AccountQueryOnlineToRedis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountQueryOnlineToRedis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountQueryOnlineToRedis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountQueryOnlineToRedis(AccountQueryOnlineToRedis other) : this() {
      account_ = other.account_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountQueryOnlineToRedis Clone() {
      return new AccountQueryOnlineToRedis(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountQueryOnlineToRedis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountQueryOnlineToRedis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountQueryOnlineToRedis other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountQueryOnlineToRedisRs : pb::IMessage<AccountQueryOnlineToRedisRs> {
    private static readonly pb::MessageParser<AccountQueryOnlineToRedisRs> _parser = new pb::MessageParser<AccountQueryOnlineToRedisRs>(() => new AccountQueryOnlineToRedisRs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountQueryOnlineToRedisRs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountQueryOnlineToRedisRs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountQueryOnlineToRedisRs(AccountQueryOnlineToRedisRs other) : this() {
      account_ = other.account_;
      returnCode_ = other.returnCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountQueryOnlineToRedisRs Clone() {
      return new AccountQueryOnlineToRedisRs(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "return_code" field.</summary>
    public const int ReturnCodeFieldNumber = 2;
    private global::Net.AccountQueryOnlineToRedisRs.Types.ReturnCode returnCode_ = global::Net.AccountQueryOnlineToRedisRs.Types.ReturnCode.SotrOffline;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.AccountQueryOnlineToRedisRs.Types.ReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountQueryOnlineToRedisRs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountQueryOnlineToRedisRs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (ReturnCode != other.ReturnCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (ReturnCode != global::Net.AccountQueryOnlineToRedisRs.Types.ReturnCode.SotrOffline) hash ^= ReturnCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (ReturnCode != global::Net.AccountQueryOnlineToRedisRs.Types.ReturnCode.SotrOffline) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ReturnCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (ReturnCode != global::Net.AccountQueryOnlineToRedisRs.Types.ReturnCode.SotrOffline) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountQueryOnlineToRedisRs other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.ReturnCode != global::Net.AccountQueryOnlineToRedisRs.Types.ReturnCode.SotrOffline) {
        ReturnCode = other.ReturnCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            ReturnCode = (global::Net.AccountQueryOnlineToRedisRs.Types.ReturnCode) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AccountQueryOnlineToRedisRs message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ReturnCode {
        [pbr::OriginalName("SOTR_Offline")] SotrOffline = 0,
        [pbr::OriginalName("SOTR_Online")] SotrOnline = 1,
      }

    }
    #endregion

  }

  public sealed partial class AccountSyncOnlineToRedis : pb::IMessage<AccountSyncOnlineToRedis> {
    private static readonly pb::MessageParser<AccountSyncOnlineToRedis> _parser = new pb::MessageParser<AccountSyncOnlineToRedis>(() => new AccountSyncOnlineToRedis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountSyncOnlineToRedis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountSyncOnlineToRedis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountSyncOnlineToRedis(AccountSyncOnlineToRedis other) : this() {
      account_ = other.account_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountSyncOnlineToRedis Clone() {
      return new AccountSyncOnlineToRedis(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountSyncOnlineToRedis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountSyncOnlineToRedis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountSyncOnlineToRedis other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountDeleteOnlineToRedis : pb::IMessage<AccountDeleteOnlineToRedis> {
    private static readonly pb::MessageParser<AccountDeleteOnlineToRedis> _parser = new pb::MessageParser<AccountDeleteOnlineToRedis>(() => new AccountDeleteOnlineToRedis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountDeleteOnlineToRedis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountDeleteOnlineToRedis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountDeleteOnlineToRedis(AccountDeleteOnlineToRedis other) : this() {
      account_ = other.account_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountDeleteOnlineToRedis Clone() {
      return new AccountDeleteOnlineToRedis(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountDeleteOnlineToRedis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountDeleteOnlineToRedis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountDeleteOnlineToRedis other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerSyncOnlineToRedis : pb::IMessage<PlayerSyncOnlineToRedis> {
    private static readonly pb::MessageParser<PlayerSyncOnlineToRedis> _parser = new pb::MessageParser<PlayerSyncOnlineToRedis>(() => new PlayerSyncOnlineToRedis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerSyncOnlineToRedis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSyncOnlineToRedis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSyncOnlineToRedis(PlayerSyncOnlineToRedis other) : this() {
      account_ = other.account_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSyncOnlineToRedis Clone() {
      return new PlayerSyncOnlineToRedis(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerSyncOnlineToRedis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerSyncOnlineToRedis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerSyncOnlineToRedis other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerDeleteOnlineToRedis : pb::IMessage<PlayerDeleteOnlineToRedis> {
    private static readonly pb::MessageParser<PlayerDeleteOnlineToRedis> _parser = new pb::MessageParser<PlayerDeleteOnlineToRedis>(() => new PlayerDeleteOnlineToRedis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerDeleteOnlineToRedis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDeleteOnlineToRedis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDeleteOnlineToRedis(PlayerDeleteOnlineToRedis other) : this() {
      account_ = other.account_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDeleteOnlineToRedis Clone() {
      return new PlayerDeleteOnlineToRedis(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerDeleteOnlineToRedis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerDeleteOnlineToRedis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerDeleteOnlineToRedis other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameTokenToRedis : pb::IMessage<GameTokenToRedis> {
    private static readonly pb::MessageParser<GameTokenToRedis> _parser = new pb::MessageParser<GameTokenToRedis>(() => new GameTokenToRedis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameTokenToRedis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameTokenToRedis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameTokenToRedis(GameTokenToRedis other) : this() {
      account_ = other.account_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameTokenToRedis Clone() {
      return new GameTokenToRedis(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameTokenToRedis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameTokenToRedis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameTokenToRedis other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenInfo : pb::IMessage<TokenInfo> {
    private static readonly pb::MessageParser<TokenInfo> _parser = new pb::MessageParser<TokenInfo>(() => new TokenInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenInfo(TokenInfo other) : this() {
      token_ = other.token_;
      playerSn_ = other.playerSn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenInfo Clone() {
      return new TokenInfo(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 2;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (PlayerSn != other.PlayerSn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (PlayerSn != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(PlayerSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenInfo other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 16: {
            PlayerSn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameTokenToRedisRs : pb::IMessage<GameTokenToRedisRs> {
    private static readonly pb::MessageParser<GameTokenToRedisRs> _parser = new pb::MessageParser<GameTokenToRedisRs>(() => new GameTokenToRedisRs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameTokenToRedisRs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameTokenToRedisRs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameTokenToRedisRs(GameTokenToRedisRs other) : this() {
      account_ = other.account_;
      tokenInfo_ = other.tokenInfo_ != null ? other.tokenInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameTokenToRedisRs Clone() {
      return new GameTokenToRedisRs(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_info" field.</summary>
    public const int TokenInfoFieldNumber = 2;
    private global::Net.TokenInfo tokenInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.TokenInfo TokenInfo {
      get { return tokenInfo_; }
      set {
        tokenInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameTokenToRedisRs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameTokenToRedisRs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (!object.Equals(TokenInfo, other.TokenInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (tokenInfo_ != null) hash ^= TokenInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (tokenInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (tokenInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameTokenToRedisRs other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.tokenInfo_ != null) {
        if (tokenInfo_ == null) {
          TokenInfo = new global::Net.TokenInfo();
        }
        TokenInfo.MergeFrom(other.TokenInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            if (tokenInfo_ == null) {
              TokenInfo = new global::Net.TokenInfo();
            }
            input.ReadMessage(TokenInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SyncPlayer : pb::IMessage<SyncPlayer> {
    private static readonly pb::MessageParser<SyncPlayer> _parser = new pb::MessageParser<SyncPlayer>(() => new SyncPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SyncPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncPlayer(SyncPlayer other) : this() {
      appId_ = other.appId_;
      account_ = other.account_;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncPlayer Clone() {
      return new SyncPlayer(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private int appId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AppId {
      get { return appId_; }
      set {
        appId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 3;
    private global::Net.Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SyncPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SyncPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (Account != other.Account) return false;
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId != 0) hash ^= AppId.GetHashCode();
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AppId);
      }
      if (Account.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Account);
      }
      if (player_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppId);
      }
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SyncPlayer other) {
      if (other == null) {
        return;
      }
      if (other.AppId != 0) {
        AppId = other.AppId;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Net.Player();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AppId = input.ReadInt32();
            break;
          }
          case 18: {
            Account = input.ReadString();
            break;
          }
          case 26: {
            if (player_ == null) {
              Player = new global::Net.Player();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EnterWorld : pb::IMessage<EnterWorld> {
    private static readonly pb::MessageParser<EnterWorld> _parser = new pb::MessageParser<EnterWorld>(() => new EnterWorld());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterWorld> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterWorld() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterWorld(EnterWorld other) : this() {
      worldId_ = other.worldId_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterWorld Clone() {
      return new EnterWorld(this);
    }

    /// <summary>Field number for the "world_id" field.</summary>
    public const int WorldIdFieldNumber = 1;
    private int worldId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WorldId {
      get { return worldId_; }
      set {
        worldId_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::Net.Vector3D position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Vector3D Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterWorld);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterWorld other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldId != other.WorldId) return false;
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldId != 0) hash ^= WorldId.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WorldId);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorldId);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterWorld other) {
      if (other == null) {
        return;
      }
      if (other.WorldId != 0) {
        WorldId = other.WorldId;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Net.Vector3D();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorldId = input.ReadInt32();
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::Net.Vector3D();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestWorld : pb::IMessage<RequestWorld> {
    private static readonly pb::MessageParser<RequestWorld> _parser = new pb::MessageParser<RequestWorld>(() => new RequestWorld());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestWorld> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWorld() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWorld(RequestWorld other) : this() {
      worldId_ = other.worldId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestWorld Clone() {
      return new RequestWorld(this);
    }

    /// <summary>Field number for the "world_id" field.</summary>
    public const int WorldIdFieldNumber = 1;
    private int worldId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WorldId {
      get { return worldId_; }
      set {
        worldId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestWorld);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestWorld other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldId != other.WorldId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldId != 0) hash ^= WorldId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WorldId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorldId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestWorld other) {
      if (other == null) {
        return;
      }
      if (other.WorldId != 0) {
        WorldId = other.WorldId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorldId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateWorld : pb::IMessage<CreateWorld> {
    private static readonly pb::MessageParser<CreateWorld> _parser = new pb::MessageParser<CreateWorld>(() => new CreateWorld());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateWorld> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorld() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorld(CreateWorld other) : this() {
      worldId_ = other.worldId_;
      lastWorldSn_ = other.lastWorldSn_;
      gameAppId_ = other.gameAppId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorld Clone() {
      return new CreateWorld(this);
    }

    /// <summary>Field number for the "world_id" field.</summary>
    public const int WorldIdFieldNumber = 1;
    private int worldId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WorldId {
      get { return worldId_; }
      set {
        worldId_ = value;
      }
    }

    /// <summary>Field number for the "last_world_sn" field.</summary>
    public const int LastWorldSnFieldNumber = 2;
    private ulong lastWorldSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LastWorldSn {
      get { return lastWorldSn_; }
      set {
        lastWorldSn_ = value;
      }
    }

    /// <summary>Field number for the "game_app_id" field.</summary>
    public const int GameAppIdFieldNumber = 3;
    private int gameAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameAppId {
      get { return gameAppId_; }
      set {
        gameAppId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateWorld);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateWorld other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldId != other.WorldId) return false;
      if (LastWorldSn != other.LastWorldSn) return false;
      if (GameAppId != other.GameAppId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldId != 0) hash ^= WorldId.GetHashCode();
      if (LastWorldSn != 0UL) hash ^= LastWorldSn.GetHashCode();
      if (GameAppId != 0) hash ^= GameAppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WorldId);
      }
      if (LastWorldSn != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(LastWorldSn);
      }
      if (GameAppId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GameAppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorldId);
      }
      if (LastWorldSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastWorldSn);
      }
      if (GameAppId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameAppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateWorld other) {
      if (other == null) {
        return;
      }
      if (other.WorldId != 0) {
        WorldId = other.WorldId;
      }
      if (other.LastWorldSn != 0UL) {
        LastWorldSn = other.LastWorldSn;
      }
      if (other.GameAppId != 0) {
        GameAppId = other.GameAppId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorldId = input.ReadInt32();
            break;
          }
          case 16: {
            LastWorldSn = input.ReadUInt64();
            break;
          }
          case 24: {
            GameAppId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BroadcastCreateWorld : pb::IMessage<BroadcastCreateWorld> {
    private static readonly pb::MessageParser<BroadcastCreateWorld> _parser = new pb::MessageParser<BroadcastCreateWorld>(() => new BroadcastCreateWorld());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BroadcastCreateWorld> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastCreateWorld() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastCreateWorld(BroadcastCreateWorld other) : this() {
      worldId_ = other.worldId_;
      worldSn_ = other.worldSn_;
      lastWorldSn_ = other.lastWorldSn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastCreateWorld Clone() {
      return new BroadcastCreateWorld(this);
    }

    /// <summary>Field number for the "world_id" field.</summary>
    public const int WorldIdFieldNumber = 1;
    private int worldId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WorldId {
      get { return worldId_; }
      set {
        worldId_ = value;
      }
    }

    /// <summary>Field number for the "world_sn" field.</summary>
    public const int WorldSnFieldNumber = 2;
    private ulong worldSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong WorldSn {
      get { return worldSn_; }
      set {
        worldSn_ = value;
      }
    }

    /// <summary>Field number for the "last_world_sn" field.</summary>
    public const int LastWorldSnFieldNumber = 3;
    private ulong lastWorldSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LastWorldSn {
      get { return lastWorldSn_; }
      set {
        lastWorldSn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BroadcastCreateWorld);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BroadcastCreateWorld other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldId != other.WorldId) return false;
      if (WorldSn != other.WorldSn) return false;
      if (LastWorldSn != other.LastWorldSn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldId != 0) hash ^= WorldId.GetHashCode();
      if (WorldSn != 0UL) hash ^= WorldSn.GetHashCode();
      if (LastWorldSn != 0UL) hash ^= LastWorldSn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WorldId);
      }
      if (WorldSn != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(WorldSn);
      }
      if (LastWorldSn != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LastWorldSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorldId);
      }
      if (WorldSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WorldSn);
      }
      if (LastWorldSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastWorldSn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BroadcastCreateWorld other) {
      if (other == null) {
        return;
      }
      if (other.WorldId != 0) {
        WorldId = other.WorldId;
      }
      if (other.WorldSn != 0UL) {
        WorldSn = other.WorldSn;
      }
      if (other.LastWorldSn != 0UL) {
        LastWorldSn = other.LastWorldSn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorldId = input.ReadInt32();
            break;
          }
          case 16: {
            WorldSn = input.ReadUInt64();
            break;
          }
          case 24: {
            LastWorldSn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BroadcastCreateWorldProxy : pb::IMessage<BroadcastCreateWorldProxy> {
    private static readonly pb::MessageParser<BroadcastCreateWorldProxy> _parser = new pb::MessageParser<BroadcastCreateWorldProxy>(() => new BroadcastCreateWorldProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BroadcastCreateWorldProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastCreateWorldProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastCreateWorldProxy(BroadcastCreateWorldProxy other) : this() {
      worldId_ = other.worldId_;
      worldSn_ = other.worldSn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastCreateWorldProxy Clone() {
      return new BroadcastCreateWorldProxy(this);
    }

    /// <summary>Field number for the "world_id" field.</summary>
    public const int WorldIdFieldNumber = 1;
    private int worldId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WorldId {
      get { return worldId_; }
      set {
        worldId_ = value;
      }
    }

    /// <summary>Field number for the "world_sn" field.</summary>
    public const int WorldSnFieldNumber = 2;
    private ulong worldSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong WorldSn {
      get { return worldSn_; }
      set {
        worldSn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BroadcastCreateWorldProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BroadcastCreateWorldProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldId != other.WorldId) return false;
      if (WorldSn != other.WorldSn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldId != 0) hash ^= WorldId.GetHashCode();
      if (WorldSn != 0UL) hash ^= WorldSn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WorldId);
      }
      if (WorldSn != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(WorldSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorldId);
      }
      if (WorldSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WorldSn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BroadcastCreateWorldProxy other) {
      if (other == null) {
        return;
      }
      if (other.WorldId != 0) {
        WorldId = other.WorldId;
      }
      if (other.WorldSn != 0UL) {
        WorldSn = other.WorldSn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorldId = input.ReadInt32();
            break;
          }
          case 16: {
            WorldSn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryWorld : pb::IMessage<QueryWorld> {
    private static readonly pb::MessageParser<QueryWorld> _parser = new pb::MessageParser<QueryWorld>(() => new QueryWorld());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryWorld> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryWorld() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryWorld(QueryWorld other) : this() {
      worldSn_ = other.worldSn_;
      lastWorldSn_ = other.lastWorldSn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryWorld Clone() {
      return new QueryWorld(this);
    }

    /// <summary>Field number for the "world_sn" field.</summary>
    public const int WorldSnFieldNumber = 1;
    private ulong worldSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong WorldSn {
      get { return worldSn_; }
      set {
        worldSn_ = value;
      }
    }

    /// <summary>Field number for the "last_world_sn" field.</summary>
    public const int LastWorldSnFieldNumber = 2;
    private ulong lastWorldSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LastWorldSn {
      get { return lastWorldSn_; }
      set {
        lastWorldSn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryWorld);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryWorld other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldSn != other.WorldSn) return false;
      if (LastWorldSn != other.LastWorldSn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldSn != 0UL) hash ^= WorldSn.GetHashCode();
      if (LastWorldSn != 0UL) hash ^= LastWorldSn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(WorldSn);
      }
      if (LastWorldSn != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(LastWorldSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WorldSn);
      }
      if (LastWorldSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastWorldSn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryWorld other) {
      if (other == null) {
        return;
      }
      if (other.WorldSn != 0UL) {
        WorldSn = other.WorldSn;
      }
      if (other.LastWorldSn != 0UL) {
        LastWorldSn = other.LastWorldSn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorldSn = input.ReadUInt64();
            break;
          }
          case 16: {
            LastWorldSn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryWorldRs : pb::IMessage<QueryWorldRs> {
    private static readonly pb::MessageParser<QueryWorldRs> _parser = new pb::MessageParser<QueryWorldRs>(() => new QueryWorldRs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryWorldRs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryWorldRs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryWorldRs(QueryWorldRs other) : this() {
      worldSn_ = other.worldSn_;
      returnCode_ = other.returnCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryWorldRs Clone() {
      return new QueryWorldRs(this);
    }

    /// <summary>Field number for the "world_sn" field.</summary>
    public const int WorldSnFieldNumber = 1;
    private ulong worldSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong WorldSn {
      get { return worldSn_; }
      set {
        worldSn_ = value;
      }
    }

    /// <summary>Field number for the "return_code" field.</summary>
    public const int ReturnCodeFieldNumber = 2;
    private global::Net.QueryWorldRs.Types.ReturnCode returnCode_ = global::Net.QueryWorldRs.Types.ReturnCode.QueryWorldOk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.QueryWorldRs.Types.ReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryWorldRs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryWorldRs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldSn != other.WorldSn) return false;
      if (ReturnCode != other.ReturnCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldSn != 0UL) hash ^= WorldSn.GetHashCode();
      if (ReturnCode != global::Net.QueryWorldRs.Types.ReturnCode.QueryWorldOk) hash ^= ReturnCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(WorldSn);
      }
      if (ReturnCode != global::Net.QueryWorldRs.Types.ReturnCode.QueryWorldOk) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ReturnCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WorldSn);
      }
      if (ReturnCode != global::Net.QueryWorldRs.Types.ReturnCode.QueryWorldOk) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryWorldRs other) {
      if (other == null) {
        return;
      }
      if (other.WorldSn != 0UL) {
        WorldSn = other.WorldSn;
      }
      if (other.ReturnCode != global::Net.QueryWorldRs.Types.ReturnCode.QueryWorldOk) {
        ReturnCode = other.ReturnCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorldSn = input.ReadUInt64();
            break;
          }
          case 16: {
            ReturnCode = (global::Net.QueryWorldRs.Types.ReturnCode) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryWorldRs message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ReturnCode {
        [pbr::OriginalName("QueryWorld_OK")] QueryWorldOk = 0,
        [pbr::OriginalName("QueryWorld_Failed")] QueryWorldFailed = 1,
      }

    }
    #endregion

  }

  public sealed partial class Teleport : pb::IMessage<Teleport> {
    private static readonly pb::MessageParser<Teleport> _parser = new pb::MessageParser<Teleport>(() => new Teleport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Teleport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Teleport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Teleport(Teleport other) : this() {
      lastWorldSn_ = other.lastWorldSn_;
      playerSn_ = other.playerSn_;
      account_ = other.account_;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Teleport Clone() {
      return new Teleport(this);
    }

    /// <summary>Field number for the "last_world_sn" field.</summary>
    public const int LastWorldSnFieldNumber = 1;
    private ulong lastWorldSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LastWorldSn {
      get { return lastWorldSn_; }
      set {
        lastWorldSn_ = value;
      }
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 2;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 3;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 4;
    private global::Net.Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Teleport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Teleport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LastWorldSn != other.LastWorldSn) return false;
      if (PlayerSn != other.PlayerSn) return false;
      if (Account != other.Account) return false;
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LastWorldSn != 0UL) hash ^= LastWorldSn.GetHashCode();
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LastWorldSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(LastWorldSn);
      }
      if (PlayerSn != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(PlayerSn);
      }
      if (Account.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Account);
      }
      if (player_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LastWorldSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastWorldSn);
      }
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Teleport other) {
      if (other == null) {
        return;
      }
      if (other.LastWorldSn != 0UL) {
        LastWorldSn = other.LastWorldSn;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Net.Player();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LastWorldSn = input.ReadUInt64();
            break;
          }
          case 16: {
            PlayerSn = input.ReadUInt64();
            break;
          }
          case 26: {
            Account = input.ReadString();
            break;
          }
          case 34: {
            if (player_ == null) {
              Player = new global::Net.Player();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TeleportAfter : pb::IMessage<TeleportAfter> {
    private static readonly pb::MessageParser<TeleportAfter> _parser = new pb::MessageParser<TeleportAfter>(() => new TeleportAfter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeleportAfter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeleportAfter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeleportAfter(TeleportAfter other) : this() {
      playerSn_ = other.playerSn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeleportAfter Clone() {
      return new TeleportAfter(this);
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 1;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeleportAfter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeleportAfter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerSn != other.PlayerSn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlayerSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeleportAfter other) {
      if (other == null) {
        return;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerSn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemovePlayer : pb::IMessage<RemovePlayer> {
    private static readonly pb::MessageParser<RemovePlayer> _parser = new pb::MessageParser<RemovePlayer>(() => new RemovePlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemovePlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayer(RemovePlayer other) : this() {
      playerSn_ = other.playerSn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayer Clone() {
      return new RemovePlayer(this);
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 1;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemovePlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemovePlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerSn != other.PlayerSn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlayerSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemovePlayer other) {
      if (other == null) {
        return;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerSn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestSyncPlayer : pb::IMessage<RequestSyncPlayer> {
    private static readonly pb::MessageParser<RequestSyncPlayer> _parser = new pb::MessageParser<RequestSyncPlayer>(() => new RequestSyncPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestSyncPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestSyncPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestSyncPlayer(RequestSyncPlayer other) : this() {
      playerSn_ = other.playerSn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestSyncPlayer Clone() {
      return new RequestSyncPlayer(this);
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 1;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestSyncPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestSyncPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerSn != other.PlayerSn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlayerSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestSyncPlayer other) {
      if (other == null) {
        return;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerSn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Role : pb::IMessage<Role> {
    private static readonly pb::MessageParser<Role> _parser = new pb::MessageParser<Role>(() => new Role());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Role> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role(Role other) : this() {
      name_ = other.name_;
      sn_ = other.sn_;
      gender_ = other.gender_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role Clone() {
      return new Role(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sn" field.</summary>
    public const int SnFieldNumber = 2;
    private ulong sn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sn {
      get { return sn_; }
      set {
        sn_ = value;
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 3;
    private global::Net.Gender gender_ = global::Net.Gender.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Gender Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private global::Net.Vector3D position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Vector3D Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Role);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Role other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Sn != other.Sn) return false;
      if (Gender != other.Gender) return false;
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Sn != 0UL) hash ^= Sn.GetHashCode();
      if (Gender != global::Net.Gender.None) hash ^= Gender.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Sn != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Sn);
      }
      if (Gender != global::Net.Gender.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Gender);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Sn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sn);
      }
      if (Gender != global::Net.Gender.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gender);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Role other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Sn != 0UL) {
        Sn = other.Sn;
      }
      if (other.Gender != global::Net.Gender.None) {
        Gender = other.Gender;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Net.Vector3D();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Sn = input.ReadUInt64();
            break;
          }
          case 24: {
            Gender = (global::Net.Gender) input.ReadEnum();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new global::Net.Vector3D();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoleAppear : pb::IMessage<RoleAppear> {
    private static readonly pb::MessageParser<RoleAppear> _parser = new pb::MessageParser<RoleAppear>(() => new RoleAppear());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleAppear> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleAppear() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleAppear(RoleAppear other) : this() {
      role_ = other.role_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleAppear Clone() {
      return new RoleAppear(this);
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Net.Role> _repeated_role_codec
        = pb::FieldCodec.ForMessage(10, global::Net.Role.Parser);
    private readonly pbc::RepeatedField<global::Net.Role> role_ = new pbc::RepeatedField<global::Net.Role>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Role> Role {
      get { return role_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleAppear);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleAppear other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!role_.Equals(other.role_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= role_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      role_.WriteTo(output, _repeated_role_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += role_.CalculateSize(_repeated_role_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleAppear other) {
      if (other == null) {
        return;
      }
      role_.Add(other.role_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            role_.AddEntriesFrom(input, _repeated_role_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoleDisAppear : pb::IMessage<RoleDisAppear> {
    private static readonly pb::MessageParser<RoleDisAppear> _parser = new pb::MessageParser<RoleDisAppear>(() => new RoleDisAppear());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleDisAppear> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleDisAppear() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleDisAppear(RoleDisAppear other) : this() {
      sn_ = other.sn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleDisAppear Clone() {
      return new RoleDisAppear(this);
    }

    /// <summary>Field number for the "sn" field.</summary>
    public const int SnFieldNumber = 1;
    private ulong sn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sn {
      get { return sn_; }
      set {
        sn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleDisAppear);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleDisAppear other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sn != other.Sn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sn != 0UL) hash ^= Sn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleDisAppear other) {
      if (other == null) {
        return;
      }
      if (other.Sn != 0UL) {
        Sn = other.Sn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Move : pb::IMessage<Move> {
    private static readonly pb::MessageParser<Move> _parser = new pb::MessageParser<Move>(() => new Move());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Move> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Move() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Move(Move other) : this() {
      playerSn_ = other.playerSn_;
      position_ = other.position_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Move Clone() {
      return new Move(this);
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 1;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Net.Vector3D> _repeated_position_codec
        = pb::FieldCodec.ForMessage(26, global::Net.Vector3D.Parser);
    private readonly pbc::RepeatedField<global::Net.Vector3D> position_ = new pbc::RepeatedField<global::Net.Vector3D>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Vector3D> Position {
      get { return position_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Move);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Move other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerSn != other.PlayerSn) return false;
      if(!position_.Equals(other.position_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      hash ^= position_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlayerSn);
      }
      position_.WriteTo(output, _repeated_position_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      size += position_.CalculateSize(_repeated_position_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Move other) {
      if (other == null) {
        return;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      position_.Add(other.position_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerSn = input.ReadUInt64();
            break;
          }
          case 26: {
            position_.AddEntriesFrom(input, _repeated_position_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Enemy : pb::IMessage<Enemy> {
    private static readonly pb::MessageParser<Enemy> _parser = new pb::MessageParser<Enemy>(() => new Enemy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Enemy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enemy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enemy(Enemy other) : this() {
      id_ = other.id_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enemy Clone() {
      return new Enemy(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::Net.Vector3D pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Vector3D Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Enemy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Enemy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Enemy other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::Net.Vector3D();
        }
        Pos.MergeFrom(other.Pos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::Net.Vector3D();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FsmSyncState : pb::IMessage<FsmSyncState> {
    private static readonly pb::MessageParser<FsmSyncState> _parser = new pb::MessageParser<FsmSyncState>(() => new FsmSyncState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FsmSyncState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FsmSyncState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FsmSyncState(FsmSyncState other) : this() {
      state_ = other.state_;
      code_ = other.code_;
      enemyId_ = other.enemyId_;
      playerSn_ = other.playerSn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FsmSyncState Clone() {
      return new FsmSyncState(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "enemy_id" field.</summary>
    public const int EnemyIdFieldNumber = 5;
    private int enemyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnemyId {
      get { return enemyId_; }
      set {
        enemyId_ = value;
      }
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 6;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FsmSyncState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FsmSyncState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (Code != other.Code) return false;
      if (EnemyId != other.EnemyId) return false;
      if (PlayerSn != other.PlayerSn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (EnemyId != 0) hash ^= EnemyId.GetHashCode();
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (EnemyId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EnemyId);
      }
      if (PlayerSn != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(PlayerSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (EnemyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnemyId);
      }
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FsmSyncState other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.EnemyId != 0) {
        EnemyId = other.EnemyId;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 40: {
            EnemyId = input.ReadInt32();
            break;
          }
          case 48: {
            PlayerSn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerSyncState : pb::IMessage<PlayerSyncState> {
    private static readonly pb::MessageParser<PlayerSyncState> _parser = new pb::MessageParser<PlayerSyncState>(() => new PlayerSyncState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerSyncState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSyncState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSyncState(PlayerSyncState other) : this() {
      state_ = other.state_;
      code_ = other.code_;
      curPos_ = other.curPos_ != null ? other.curPos_.Clone() : null;
      hitPos_ = other.hitPos_ != null ? other.hitPos_.Clone() : null;
      playerSn_ = other.playerSn_;
      enemyId_ = other.enemyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSyncState Clone() {
      return new PlayerSyncState(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "curPos" field.</summary>
    public const int CurPosFieldNumber = 3;
    private global::Net.Vector3D curPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Vector3D CurPos {
      get { return curPos_; }
      set {
        curPos_ = value;
      }
    }

    /// <summary>Field number for the "hitPos" field.</summary>
    public const int HitPosFieldNumber = 4;
    private global::Net.Vector3D hitPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Vector3D HitPos {
      get { return hitPos_; }
      set {
        hitPos_ = value;
      }
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 5;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    /// <summary>Field number for the "enemy_id" field.</summary>
    public const int EnemyIdFieldNumber = 6;
    private int enemyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnemyId {
      get { return enemyId_; }
      set {
        enemyId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerSyncState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerSyncState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (Code != other.Code) return false;
      if (!object.Equals(CurPos, other.CurPos)) return false;
      if (!object.Equals(HitPos, other.HitPos)) return false;
      if (PlayerSn != other.PlayerSn) return false;
      if (EnemyId != other.EnemyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (curPos_ != null) hash ^= CurPos.GetHashCode();
      if (hitPos_ != null) hash ^= HitPos.GetHashCode();
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (EnemyId != 0) hash ^= EnemyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (curPos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CurPos);
      }
      if (hitPos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HitPos);
      }
      if (PlayerSn != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(PlayerSn);
      }
      if (EnemyId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EnemyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (curPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurPos);
      }
      if (hitPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitPos);
      }
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (EnemyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnemyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerSyncState other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.curPos_ != null) {
        if (curPos_ == null) {
          CurPos = new global::Net.Vector3D();
        }
        CurPos.MergeFrom(other.CurPos);
      }
      if (other.hitPos_ != null) {
        if (hitPos_ == null) {
          HitPos = new global::Net.Vector3D();
        }
        HitPos.MergeFrom(other.HitPos);
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      if (other.EnemyId != 0) {
        EnemyId = other.EnemyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 26: {
            if (curPos_ == null) {
              CurPos = new global::Net.Vector3D();
            }
            input.ReadMessage(CurPos);
            break;
          }
          case 34: {
            if (hitPos_ == null) {
              HitPos = new global::Net.Vector3D();
            }
            input.ReadMessage(HitPos);
            break;
          }
          case 40: {
            PlayerSn = input.ReadUInt64();
            break;
          }
          case 48: {
            EnemyId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestSyncEnemy : pb::IMessage<RequestSyncEnemy> {
    private static readonly pb::MessageParser<RequestSyncEnemy> _parser = new pb::MessageParser<RequestSyncEnemy>(() => new RequestSyncEnemy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestSyncEnemy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestSyncEnemy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestSyncEnemy(RequestSyncEnemy other) : this() {
      playerSn_ = other.playerSn_;
      enemyId_ = other.enemyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestSyncEnemy Clone() {
      return new RequestSyncEnemy(this);
    }

    /// <summary>Field number for the "player_sn" field.</summary>
    public const int PlayerSnFieldNumber = 1;
    private ulong playerSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerSn {
      get { return playerSn_; }
      set {
        playerSn_ = value;
      }
    }

    /// <summary>Field number for the "enemy_id" field.</summary>
    public const int EnemyIdFieldNumber = 2;
    private int enemyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnemyId {
      get { return enemyId_; }
      set {
        enemyId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestSyncEnemy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestSyncEnemy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerSn != other.PlayerSn) return false;
      if (EnemyId != other.EnemyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerSn != 0UL) hash ^= PlayerSn.GetHashCode();
      if (EnemyId != 0) hash ^= EnemyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerSn != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlayerSn);
      }
      if (EnemyId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EnemyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerSn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerSn);
      }
      if (EnemyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnemyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestSyncEnemy other) {
      if (other == null) {
        return;
      }
      if (other.PlayerSn != 0UL) {
        PlayerSn = other.PlayerSn;
      }
      if (other.EnemyId != 0) {
        EnemyId = other.EnemyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerSn = input.ReadUInt64();
            break;
          }
          case 16: {
            EnemyId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestLinkPlayer : pb::IMessage<RequestLinkPlayer> {
    private static readonly pb::MessageParser<RequestLinkPlayer> _parser = new pb::MessageParser<RequestLinkPlayer>(() => new RequestLinkPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestLinkPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.MsgReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestLinkPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestLinkPlayer(RequestLinkPlayer other) : this() {
      enemyId_ = other.enemyId_;
      isLinker_ = other.isLinker_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestLinkPlayer Clone() {
      return new RequestLinkPlayer(this);
    }

    /// <summary>Field number for the "enemy_id" field.</summary>
    public const int EnemyIdFieldNumber = 1;
    private int enemyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnemyId {
      get { return enemyId_; }
      set {
        enemyId_ = value;
      }
    }

    /// <summary>Field number for the "isLinker" field.</summary>
    public const int IsLinkerFieldNumber = 2;
    private bool isLinker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLinker {
      get { return isLinker_; }
      set {
        isLinker_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestLinkPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestLinkPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnemyId != other.EnemyId) return false;
      if (IsLinker != other.IsLinker) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnemyId != 0) hash ^= EnemyId.GetHashCode();
      if (IsLinker != false) hash ^= IsLinker.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnemyId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EnemyId);
      }
      if (IsLinker != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsLinker);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnemyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnemyId);
      }
      if (IsLinker != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestLinkPlayer other) {
      if (other == null) {
        return;
      }
      if (other.EnemyId != 0) {
        EnemyId = other.EnemyId;
      }
      if (other.IsLinker != false) {
        IsLinker = other.IsLinker;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnemyId = input.ReadInt32();
            break;
          }
          case 16: {
            IsLinker = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
